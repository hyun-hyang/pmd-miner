{
  "formatVersion": 0,
  "pmdVersion": "7.12.0",
  "timestamp": "2025-04-22T04:22:34.034+09:00",
  "files": [
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\ArrayUtils.java",
      "violations": [
        {
          "beginline": 158,
          "begincolumn": 29,
          "endline": 158,
          "endcolumn": 43,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 293,
          "begincolumn": 34,
          "endline": 293,
          "endcolumn": 48,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 306,
          "begincolumn": 32,
          "endline": 306,
          "endcolumn": 44,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 319,
          "begincolumn": 31,
          "endline": 319,
          "endcolumn": 42,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 332,
          "begincolumn": 33,
          "endline": 332,
          "endcolumn": 46,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 358,
          "begincolumn": 34,
          "endline": 358,
          "endcolumn": 48,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 371,
          "begincolumn": 33,
          "endline": 371,
          "endcolumn": 46,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 384,
          "begincolumn": 35,
          "endline": 384,
          "endcolumn": 50,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 401,
          "begincolumn": 57,
          "endline": 401,
          "endcolumn": 72,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 418,
          "begincolumn": 55,
          "endline": 418,
          "endcolumn": 68,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 435,
          "begincolumn": 54,
          "endline": 435,
          "endcolumn": 66,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 452,
          "begincolumn": 56,
          "endline": 452,
          "endcolumn": 70,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 486,
          "begincolumn": 57,
          "endline": 486,
          "endcolumn": 72,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 503,
          "begincolumn": 56,
          "endline": 503,
          "endcolumn": 70,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 520,
          "begincolumn": 58,
          "endline": 520,
          "endcolumn": 74,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\CharRange.java",
      "violations": [
        {
          "beginline": 192,
          "begincolumn": 19,
          "endline": 192,
          "endcolumn": 27,
          "description": "The method \u0027toString()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\CharSet.java",
      "violations": [
        {
          "beginline": 78,
          "begincolumn": 23,
          "endline": 78,
          "endcolumn": 35,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 152,
          "begincolumn": 19,
          "endline": 152,
          "endcolumn": 27,
          "description": "The method \u0027toString()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\CharSetUtils.java",
      "violations": [
        {
          "beginline": 89,
          "begincolumn": 39,
          "endline": 89,
          "endcolumn": 51,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 118,
          "begincolumn": 46,
          "endline": 118,
          "endcolumn": 58,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 124,
          "begincolumn": 19,
          "endline": 124,
          "endcolumn": 22,
          "description": "The initializer for variable \u0027ch\u0027 is never used (overwritten on line 126)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 160,
          "begincolumn": 41,
          "endline": 160,
          "endcolumn": 53,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 196,
          "begincolumn": 45,
          "endline": 196,
          "endcolumn": 57,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\ClassUtils.java",
      "violations": [
        {
          "beginline": 224,
          "begincolumn": 9,
          "endline": 235,
          "endcolumn": 10,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 229,
          "begincolumn": 13,
          "endline": 234,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 308,
          "begincolumn": 9,
          "endline": 315,
          "endcolumn": 10,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 375,
          "begincolumn": 60,
          "endline": 375,
          "endcolumn": 80,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 380,
          "begincolumn": 13,
          "endline": 380,
          "endcolumn": 23,
          "description": "Avoid reassigning parameters such as \u0027classArray\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 383,
          "begincolumn": 13,
          "endline": 383,
          "endcolumn": 25,
          "description": "Avoid reassigning parameters such as \u0027toClassArray\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\NumberRange.java",
      "violations": [
        {
          "beginline": 186,
          "begincolumn": 20,
          "endline": 186,
          "endcolumn": 26,
          "description": "The method \u0027equals(Object)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 202,
          "begincolumn": 16,
          "endline": 202,
          "endcolumn": 24,
          "description": "The method \u0027hashCode()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 217,
          "begincolumn": 19,
          "endline": 217,
          "endcolumn": 27,
          "description": "The method \u0027toString()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\NumberUtils.java",
      "violations": [
        {
          "beginline": 413,
          "begincolumn": 13,
          "endline": 413,
          "endcolumn": 14,
          "description": "Avoid reassigning parameters such as \u0027a\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 431,
          "begincolumn": 13,
          "endline": 431,
          "endcolumn": 14,
          "description": "Avoid reassigning parameters such as \u0027a\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 449,
          "begincolumn": 13,
          "endline": 449,
          "endcolumn": 14,
          "description": "Avoid reassigning parameters such as \u0027a\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 467,
          "begincolumn": 13,
          "endline": 467,
          "endcolumn": 14,
          "description": "Avoid reassigning parameters such as \u0027a\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\RandomStringUtils.java",
      "violations": [
        {
          "beginline": 199,
          "begincolumn": 98,
          "endline": 199,
          "endcolumn": 108,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 201,
          "begincolumn": 13,
          "endline": 201,
          "endcolumn": 16,
          "description": "Avoid reassigning parameters such as \u0027end\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 202,
          "begincolumn": 13,
          "endline": 202,
          "endcolumn": 18,
          "description": "Avoid reassigning parameters such as \u0027start\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 212,
          "begincolumn": 15,
          "endline": 212,
          "endcolumn": 20,
          "description": "Avoid reassigning parameters such as \u0027count\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 255,
          "begincolumn": 44,
          "endline": 255,
          "endcolumn": 54,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\SerializationUtils.java",
      "violations": [
        {
          "beginline": 119,
          "begincolumn": 9,
          "endline": 134,
          "endcolumn": 10,
          "description": "Consider using a try-with-resources statement instead of explicitly closing the resource",
          "rule": "UseTryWithResources",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usetrywithresources"
        },
        {
          "beginline": 162,
          "begincolumn": 9,
          "endline": 179,
          "endcolumn": 10,
          "description": "Consider using a try-with-resources statement instead of explicitly closing the resource",
          "rule": "UseTryWithResources",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usetrywithresources"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\StringUtils.java",
      "violations": [
        {
          "beginline": 208,
          "begincolumn": 46,
          "endline": 208,
          "endcolumn": 65,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 217,
          "begincolumn": 19,
          "endline": 217,
          "endcolumn": 20,
          "description": "The initializer for variable \u0027tmp\u0027 is never used (overwritten on line 219)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 241,
          "begincolumn": 50,
          "endline": 241,
          "endcolumn": 69,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 247,
          "begincolumn": 19,
          "endline": 247,
          "endcolumn": 20,
          "description": "The initializer for variable \u0027tmp\u0027 is never used (overwritten on line 249)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 277,
          "begincolumn": 13,
          "endline": 277,
          "endcolumn": 18,
          "description": "Avoid reassigning parameters such as \u0027start\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 309,
          "begincolumn": 13,
          "endline": 309,
          "endcolumn": 16,
          "description": "Avoid reassigning parameters such as \u0027end\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 312,
          "begincolumn": 13,
          "endline": 312,
          "endcolumn": 18,
          "description": "Avoid reassigning parameters such as \u0027start\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 448,
          "begincolumn": 31,
          "endline": 448,
          "endcolumn": 35,
          "description": "The initializer for variable \u0027tok\u0027 is never used (overwritten on lines 452 and 454)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 495,
          "begincolumn": 38,
          "endline": 495,
          "endcolumn": 52,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 511,
          "begincolumn": 13,
          "endline": 511,
          "endcolumn": 22,
          "description": "Avoid reassigning parameters such as \u0027separator\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 539,
          "begincolumn": 13,
          "endline": 539,
          "endcolumn": 22,
          "description": "Avoid reassigning parameters such as \u0027separator\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 603,
          "begincolumn": 13,
          "endline": 603,
          "endcolumn": 18,
          "description": "Use one line for each declaration, it enhances code readability.",
          "rule": "OneDeclarationPerLine",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#onedeclarationperline"
        },
        {
          "beginline": 603,
          "begincolumn": 30,
          "endline": 603,
          "endcolumn": 31,
          "description": "The initializer for variable \u0027end\u0027 is never used (overwritten on line 604)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 608,
          "begincolumn": 19,
          "endline": 608,
          "endcolumn": 22,
          "description": "Avoid reassigning parameters such as \u0027max\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 668,
          "begincolumn": 9,
          "endline": 668,
          "endcolumn": 12,
          "description": "Avoid reassigning parameters such as \u0027str\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 967,
          "begincolumn": 9,
          "endline": 967,
          "endcolumn": 13,
          "description": "Avoid reassigning parameters such as \u0027size\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 969,
          "begincolumn": 13,
          "endline": 969,
          "endcolumn": 16,
          "description": "Avoid reassigning parameters such as \u0027str\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 996,
          "begincolumn": 9,
          "endline": 996,
          "endcolumn": 13,
          "description": "Avoid reassigning parameters such as \u0027size\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 998,
          "begincolumn": 13,
          "endline": 998,
          "endcolumn": 16,
          "description": "Avoid reassigning parameters such as \u0027str\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 1025,
          "begincolumn": 9,
          "endline": 1025,
          "endcolumn": 12,
          "description": "Avoid reassigning parameters such as \u0027str\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 1036,
          "begincolumn": 37,
          "endline": 1036,
          "endcolumn": 50,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 1203,
          "begincolumn": 19,
          "endline": 1203,
          "endcolumn": 20,
          "description": "The initializer for variable \u0027ch\u0027 is never used (overwritten on line 1207)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 1204,
          "begincolumn": 20,
          "endline": 1204,
          "endcolumn": 21,
          "description": "The initializer for variable \u0027tmp\u0027 is never used (overwritten on lines 1209, 1211, 1214, 1216 and 1219)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 1589,
          "begincolumn": 38,
          "endline": 1589,
          "endcolumn": 52,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 1681,
          "begincolumn": 52,
          "endline": 1681,
          "endcolumn": 64,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\builder\\CompareToBuilder.java",
      "violations": [
        {
          "beginline": 189,
          "begincolumn": 31,
          "endline": 189,
          "endcolumn": 85,
          "description": "Thrown exception does not preserve the stack trace of exception \u0027e\u0027 on all code paths",
          "rule": "PreserveStackTrace",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#preservestacktrace"
        },
        {
          "beginline": 389,
          "begincolumn": 50,
          "endline": 389,
          "endcolumn": 62,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 422,
          "begincolumn": 48,
          "endline": 422,
          "endcolumn": 58,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 450,
          "begincolumn": 47,
          "endline": 450,
          "endcolumn": 56,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 478,
          "begincolumn": 49,
          "endline": 478,
          "endcolumn": 60,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 506,
          "begincolumn": 48,
          "endline": 506,
          "endcolumn": 58,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 562,
          "begincolumn": 50,
          "endline": 562,
          "endcolumn": 62,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 590,
          "begincolumn": 49,
          "endline": 590,
          "endcolumn": 60,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 618,
          "begincolumn": 51,
          "endline": 618,
          "endcolumn": 64,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\builder\\EqualsBuilder.java",
      "violations": [
        {
          "beginline": 185,
          "begincolumn": 31,
          "endline": 185,
          "endcolumn": 85,
          "description": "Thrown exception does not preserve the stack trace of exception \u0027e\u0027 on all code paths",
          "rule": "PreserveStackTrace",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#preservestacktrace"
        },
        {
          "beginline": 368,
          "begincolumn": 47,
          "endline": 368,
          "endcolumn": 59,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 401,
          "begincolumn": 45,
          "endline": 401,
          "endcolumn": 55,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 429,
          "begincolumn": 44,
          "endline": 429,
          "endcolumn": 53,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 457,
          "begincolumn": 46,
          "endline": 457,
          "endcolumn": 57,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 485,
          "begincolumn": 45,
          "endline": 485,
          "endcolumn": 55,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 541,
          "begincolumn": 47,
          "endline": 541,
          "endcolumn": 59,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 569,
          "begincolumn": 46,
          "endline": 569,
          "endcolumn": 57,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 597,
          "begincolumn": 48,
          "endline": 597,
          "endcolumn": 61,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\builder\\HashCodeBuilder.java",
      "violations": [
        {
          "beginline": 116,
          "begincolumn": 26,
          "endline": 116,
          "endcolumn": 27,
          "description": "The field initializer for \u0027iTotal\u0027 is never used (overwritten on lines 126 and 154)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 265,
          "begincolumn": 9,
          "endline": 278,
          "endcolumn": 10,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 274,
          "begincolumn": 31,
          "endline": 274,
          "endcolumn": 85,
          "description": "Thrown exception does not preserve the stack trace of exception \u0027e\u0027 on all code paths",
          "rule": "PreserveStackTrace",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#preservestacktrace"
        },
        {
          "beginline": 420,
          "begincolumn": 35,
          "endline": 420,
          "endcolumn": 49,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 424,
          "begincolumn": 13,
          "endline": 426,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 437,
          "begincolumn": 35,
          "endline": 437,
          "endcolumn": 47,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 441,
          "begincolumn": 13,
          "endline": 443,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 454,
          "begincolumn": 35,
          "endline": 454,
          "endcolumn": 46,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 458,
          "begincolumn": 13,
          "endline": 460,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 471,
          "begincolumn": 35,
          "endline": 471,
          "endcolumn": 48,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 475,
          "begincolumn": 13,
          "endline": 477,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 488,
          "begincolumn": 35,
          "endline": 488,
          "endcolumn": 47,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 492,
          "begincolumn": 13,
          "endline": 494,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 509,
          "begincolumn": 13,
          "endline": 511,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 522,
          "begincolumn": 35,
          "endline": 522,
          "endcolumn": 49,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 526,
          "begincolumn": 13,
          "endline": 528,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 539,
          "begincolumn": 35,
          "endline": 539,
          "endcolumn": 48,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 543,
          "begincolumn": 13,
          "endline": 545,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 556,
          "begincolumn": 35,
          "endline": 556,
          "endcolumn": 50,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 560,
          "begincolumn": 13,
          "endline": 562,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\builder\\ToStringBuilder.java",
      "violations": [
        {
          "beginline": 121,
          "begincolumn": 19,
          "endline": 121,
          "endcolumn": 31,
          "description": "StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).",
          "rule": "AvoidStringBufferField",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidstringbufferfield"
        },
        {
          "beginline": 173,
          "begincolumn": 13,
          "endline": 173,
          "endcolumn": 18,
          "description": "Avoid reassigning parameters such as \u0027style\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 176,
          "begincolumn": 13,
          "endline": 176,
          "endcolumn": 19,
          "description": "Avoid reassigning parameters such as \u0027buffer\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 282,
          "begincolumn": 13,
          "endline": 282,
          "endcolumn": 18,
          "description": "Avoid reassigning parameters such as \u0027style\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 287,
          "begincolumn": 9,
          "endline": 301,
          "endcolumn": 10,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 297,
          "begincolumn": 31,
          "endline": 297,
          "endcolumn": 85,
          "description": "Thrown exception does not preserve the stack trace of exception \u0027ex\u0027 on all code paths",
          "rule": "PreserveStackTrace",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#preservestacktrace"
        },
        {
          "beginline": 339,
          "begincolumn": 49,
          "endline": 339,
          "endcolumn": 72,
          "description": "Do not use `new Boolean(...)`, prefer `Boolean.valueOf`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 551,
          "begincolumn": 35,
          "endline": 551,
          "endcolumn": 49,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 563,
          "begincolumn": 53,
          "endline": 563,
          "endcolumn": 67,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 581,
          "begincolumn": 48,
          "endline": 581,
          "endcolumn": 71,
          "description": "Do not use `new Boolean(...)`, prefer `Boolean.valueOf`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 593,
          "begincolumn": 35,
          "endline": 593,
          "endcolumn": 47,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 605,
          "begincolumn": 53,
          "endline": 605,
          "endcolumn": 65,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 623,
          "begincolumn": 48,
          "endline": 623,
          "endcolumn": 71,
          "description": "Do not use `new Boolean(...)`, prefer `Boolean.valueOf`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 635,
          "begincolumn": 35,
          "endline": 635,
          "endcolumn": 46,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 647,
          "begincolumn": 53,
          "endline": 647,
          "endcolumn": 64,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 665,
          "begincolumn": 48,
          "endline": 665,
          "endcolumn": 71,
          "description": "Do not use `new Boolean(...)`, prefer `Boolean.valueOf`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 677,
          "begincolumn": 35,
          "endline": 677,
          "endcolumn": 48,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 689,
          "begincolumn": 53,
          "endline": 689,
          "endcolumn": 66,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 707,
          "begincolumn": 48,
          "endline": 707,
          "endcolumn": 71,
          "description": "Do not use `new Boolean(...)`, prefer `Boolean.valueOf`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 719,
          "begincolumn": 35,
          "endline": 719,
          "endcolumn": 47,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 731,
          "begincolumn": 53,
          "endline": 731,
          "endcolumn": 65,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 749,
          "begincolumn": 48,
          "endline": 749,
          "endcolumn": 71,
          "description": "Do not use `new Boolean(...)`, prefer `Boolean.valueOf`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 791,
          "begincolumn": 48,
          "endline": 791,
          "endcolumn": 71,
          "description": "Do not use `new Boolean(...)`, prefer `Boolean.valueOf`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 803,
          "begincolumn": 35,
          "endline": 803,
          "endcolumn": 49,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 815,
          "begincolumn": 53,
          "endline": 815,
          "endcolumn": 67,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 833,
          "begincolumn": 48,
          "endline": 833,
          "endcolumn": 71,
          "description": "Do not use `new Boolean(...)`, prefer `Boolean.valueOf`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 845,
          "begincolumn": 35,
          "endline": 845,
          "endcolumn": 48,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 857,
          "begincolumn": 53,
          "endline": 857,
          "endcolumn": 66,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 875,
          "begincolumn": 48,
          "endline": 875,
          "endcolumn": 71,
          "description": "Do not use `new Boolean(...)`, prefer `Boolean.valueOf`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 887,
          "begincolumn": 35,
          "endline": 887,
          "endcolumn": 50,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 899,
          "begincolumn": 53,
          "endline": 899,
          "endcolumn": 68,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 917,
          "begincolumn": 48,
          "endline": 917,
          "endcolumn": 71,
          "description": "Do not use `new Boolean(...)`, prefer `Boolean.valueOf`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 937,
          "begincolumn": 19,
          "endline": 937,
          "endcolumn": 27,
          "description": "The method \u0027toString()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\builder\\ToStringStyle.java",
      "violations": [
        {
          "beginline": 616,
          "begincolumn": 72,
          "endline": 616,
          "endcolumn": 86,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 640,
          "begincolumn": 73,
          "endline": 640,
          "endcolumn": 87,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 677,
          "begincolumn": 72,
          "endline": 677,
          "endcolumn": 84,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 695,
          "begincolumn": 73,
          "endline": 695,
          "endcolumn": 85,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 732,
          "begincolumn": 72,
          "endline": 732,
          "endcolumn": 83,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 750,
          "begincolumn": 73,
          "endline": 750,
          "endcolumn": 84,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 787,
          "begincolumn": 72,
          "endline": 787,
          "endcolumn": 85,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 805,
          "begincolumn": 73,
          "endline": 805,
          "endcolumn": 86,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 897,
          "begincolumn": 72,
          "endline": 897,
          "endcolumn": 84,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 915,
          "begincolumn": 73,
          "endline": 915,
          "endcolumn": 85,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 952,
          "begincolumn": 72,
          "endline": 952,
          "endcolumn": 86,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 970,
          "begincolumn": 73,
          "endline": 970,
          "endcolumn": 87,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 1007,
          "begincolumn": 72,
          "endline": 1007,
          "endcolumn": 85,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 1025,
          "begincolumn": 73,
          "endline": 1025,
          "endcolumn": 86,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 1062,
          "begincolumn": 72,
          "endline": 1062,
          "endcolumn": 87,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 1080,
          "begincolumn": 73,
          "endline": 1080,
          "endcolumn": 88,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 1361,
          "begincolumn": 13,
          "endline": 1361,
          "endcolumn": 23,
          "description": "Avoid reassigning parameters such as \u0027arrayStart\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 1405,
          "begincolumn": 13,
          "endline": 1405,
          "endcolumn": 27,
          "description": "Avoid reassigning parameters such as \u0027arraySeparator\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 1427,
          "begincolumn": 13,
          "endline": 1427,
          "endcolumn": 25,
          "description": "Avoid reassigning parameters such as \u0027contentStart\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 1449,
          "begincolumn": 13,
          "endline": 1449,
          "endcolumn": 23,
          "description": "Avoid reassigning parameters such as \u0027contentEnd\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 1471,
          "begincolumn": 13,
          "endline": 1471,
          "endcolumn": 36,
          "description": "Avoid reassigning parameters such as \u0027fieldNameValueSeparator\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 1493,
          "begincolumn": 13,
          "endline": 1493,
          "endcolumn": 27,
          "description": "Avoid reassigning parameters such as \u0027fieldSeparator\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 1515,
          "begincolumn": 13,
          "endline": 1515,
          "endcolumn": 21,
          "description": "Avoid reassigning parameters such as \u0027nullText\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 1539,
          "begincolumn": 13,
          "endline": 1539,
          "endcolumn": 26,
          "description": "Avoid reassigning parameters such as \u0027sizeStartText\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 1563,
          "begincolumn": 13,
          "endline": 1563,
          "endcolumn": 24,
          "description": "Avoid reassigning parameters such as \u0027sizeEndText\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 1587,
          "begincolumn": 13,
          "endline": 1587,
          "endcolumn": 35,
          "description": "Avoid reassigning parameters such as \u0027summaryObjectStartText\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 1611,
          "begincolumn": 13,
          "endline": 1611,
          "endcolumn": 33,
          "description": "Avoid reassigning parameters such as \u0027summaryObjectEndText\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\enum\\Enum.java",
      "violations": [
        {
          "beginline": 277,
          "begincolumn": 26,
          "endline": 277,
          "endcolumn": 32,
          "description": "The method \u0027equals(Object)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 316,
          "begincolumn": 22,
          "endline": 316,
          "endcolumn": 30,
          "description": "The method \u0027hashCode()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 330,
          "begincolumn": 16,
          "endline": 330,
          "endcolumn": 25,
          "description": "The method \u0027compareTo(Object)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 341,
          "begincolumn": 19,
          "endline": 341,
          "endcolumn": 27,
          "description": "The method \u0027toString()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\exception\\ExceptionUtils.java",
      "violations": [
        {
          "beginline": 135,
          "begincolumn": 51,
          "endline": 135,
          "endcolumn": 71,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 140,
          "begincolumn": 13,
          "endline": 147,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 170,
          "begincolumn": 13,
          "endline": 170,
          "endcolumn": 14,
          "description": "Avoid reassigning parameters such as \u0027t\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 301,
          "begincolumn": 13,
          "endline": 301,
          "endcolumn": 14,
          "description": "Avoid reassigning parameters such as \u0027t\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 319,
          "begincolumn": 13,
          "endline": 319,
          "endcolumn": 14,
          "description": "Avoid reassigning parameters such as \u0027t\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\exception\\NestableDelegate.java",
      "violations": [
        {
          "beginline": 84,
          "begincolumn": 34,
          "endline": 84,
          "endcolumn": 38,
          "description": "The field initializer for \u0027nestable\u0027 is never used (overwritten on line 97)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 303,
          "begincolumn": 21,
          "endline": 306,
          "endcolumn": 22,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 312,
          "begincolumn": 13,
          "endline": 315,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\exception\\NestableError.java",
      "violations": [
        {
          "beginline": 128,
          "begincolumn": 22,
          "endline": 128,
          "endcolumn": 30,
          "description": "The method \u0027getCause()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 133,
          "begincolumn": 19,
          "endline": 133,
          "endcolumn": 29,
          "description": "The method \u0027getMessage()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 180,
          "begincolumn": 17,
          "endline": 180,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 185,
          "begincolumn": 17,
          "endline": 185,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace(PrintStream)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 190,
          "begincolumn": 17,
          "endline": 190,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace(PrintWriter)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\exception\\NestableException.java",
      "violations": [
        {
          "beginline": 186,
          "begincolumn": 22,
          "endline": 186,
          "endcolumn": 30,
          "description": "The method \u0027getCause()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 191,
          "begincolumn": 19,
          "endline": 191,
          "endcolumn": 29,
          "description": "The method \u0027getMessage()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 238,
          "begincolumn": 17,
          "endline": 238,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 243,
          "begincolumn": 17,
          "endline": 243,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace(PrintStream)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 248,
          "begincolumn": 17,
          "endline": 248,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace(PrintWriter)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\exception\\NestableRuntimeException.java",
      "violations": [
        {
          "beginline": 133,
          "begincolumn": 22,
          "endline": 133,
          "endcolumn": 30,
          "description": "The method \u0027getCause()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 138,
          "begincolumn": 19,
          "endline": 138,
          "endcolumn": 29,
          "description": "The method \u0027getMessage()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 185,
          "begincolumn": 17,
          "endline": 185,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 190,
          "begincolumn": 17,
          "endline": 190,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace(PrintStream)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 195,
          "begincolumn": 17,
          "endline": 195,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace(PrintWriter)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\reflect\\ConstructorUtils.java",
      "violations": [
        {
          "beginline": 98,
          "begincolumn": 57,
          "endline": 98,
          "endcolumn": 70,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 133,
          "begincolumn": 13,
          "endline": 137,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 163,
          "begincolumn": 62,
          "endline": 163,
          "endcolumn": 75,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 230,
          "begincolumn": 55,
          "endline": 230,
          "endcolumn": 70,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 360,
          "begincolumn": 64,
          "endline": 360,
          "endcolumn": 79,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 400,
          "begincolumn": 69,
          "endline": 400,
          "endcolumn": 84,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\reflect\\FieldUtils.java",
      "violations": [
        {
          "beginline": 163,
          "begincolumn": 13,
          "endline": 172,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\reflect\\MethodUtils.java",
      "violations": [
        {
          "beginline": 121,
          "begincolumn": 66,
          "endline": 121,
          "endcolumn": 84,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 155,
          "begincolumn": 21,
          "endline": 163,
          "endcolumn": 22,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 263,
          "begincolumn": 13,
          "endline": 263,
          "endcolumn": 26,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 319,
          "begincolumn": 13,
          "endline": 319,
          "endcolumn": 35,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 326,
          "begincolumn": 13,
          "endline": 326,
          "endcolumn": 27,
          "description": "Avoid reassigning parameters such as \u0027parameterTypes\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 326,
          "begincolumn": 30,
          "endline": 326,
          "endcolumn": 58,
          "description": "The value assigned to variable \u0027parameterTypes\u0027 is never used",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 329,
          "begincolumn": 13,
          "endline": 329,
          "endcolumn": 17,
          "description": "Avoid reassigning parameters such as \u0027args\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 329,
          "begincolumn": 20,
          "endline": 329,
          "endcolumn": 49,
          "description": "The value assigned to variable \u0027args\u0027 is never used",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 397,
          "begincolumn": 13,
          "endline": 397,
          "endcolumn": 26,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 403,
          "begincolumn": 13,
          "endline": 403,
          "endcolumn": 17,
          "description": "Avoid reassigning parameters such as \u0027args\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 437,
          "begincolumn": 13,
          "endline": 437,
          "endcolumn": 35,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 444,
          "begincolumn": 13,
          "endline": 444,
          "endcolumn": 17,
          "description": "Avoid reassigning parameters such as \u0027args\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 448,
          "begincolumn": 13,
          "endline": 448,
          "endcolumn": 27,
          "description": "Avoid reassigning parameters such as \u0027parameterTypes\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 499,
          "begincolumn": 13,
          "endline": 499,
          "endcolumn": 35,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 537,
          "begincolumn": 16,
          "endline": 537,
          "endcolumn": 26,
          "description": "Avoid unused local variables such as \u0027methodName\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 538,
          "begincolumn": 17,
          "endline": 538,
          "endcolumn": 31,
          "description": "Avoid unused local variables such as \u0027parameterTypes\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 539,
          "begincolumn": 9,
          "endline": 539,
          "endcolumn": 15,
          "description": "Avoid reassigning parameters such as \u0027method\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 565,
          "begincolumn": 46,
          "endline": 565,
          "endcolumn": 68,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 570,
          "begincolumn": 31,
          "endline": 570,
          "endcolumn": 36,
          "description": "Avoid reassigning parameters such as \u0027clazz\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 574,
          "begincolumn": 13,
          "endline": 598,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\reflect\\ReflectionUtils.java",
      "violations": [
        {
          "beginline": 206,
          "begincolumn": 64,
          "endline": 206,
          "endcolumn": 82,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 211,
          "begincolumn": 13,
          "endline": 211,
          "endcolumn": 27,
          "description": "Avoid reassigning parameters such as \u0027requestedTypes\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 214,
          "begincolumn": 13,
          "endline": 214,
          "endcolumn": 23,
          "description": "Avoid reassigning parameters such as \u0027paramTypes\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 274,
          "begincolumn": 26,
          "endline": 274,
          "endcolumn": 30,
          "description": "The initializer for variable \u0027message\u0027 is never used (overwritten on lines 279, 281, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309 and 311)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\ArrayUtilsTest.java",
      "violations": [
        {
          "beginline": 80,
          "begincolumn": 24,
          "endline": 80,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 96,
          "begincolumn": 17,
          "endline": 96,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 96,
          "begincolumn": 17,
          "endline": 96,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 102,
          "begincolumn": 9,
          "endline": 107,
          "endcolumn": 10,
          "description": "In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions",
          "rule": "JUnitUseExpected",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junituseexpected"
        },
        {
          "beginline": 109,
          "begincolumn": 9,
          "endline": 114,
          "endcolumn": 10,
          "description": "In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions",
          "rule": "JUnitUseExpected",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junituseexpected"
        },
        {
          "beginline": 116,
          "begincolumn": 9,
          "endline": 121,
          "endcolumn": 10,
          "description": "In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions",
          "rule": "JUnitUseExpected",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junituseexpected"
        },
        {
          "beginline": 123,
          "begincolumn": 9,
          "endline": 128,
          "endcolumn": 10,
          "description": "In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions",
          "rule": "JUnitUseExpected",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junituseexpected"
        },
        {
          "beginline": 131,
          "begincolumn": 27,
          "endline": 131,
          "endcolumn": 33,
          "description": "The method \u0027getKey()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 134,
          "begincolumn": 27,
          "endline": 134,
          "endcolumn": 35,
          "description": "The method \u0027getValue()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 137,
          "begincolumn": 27,
          "endline": 137,
          "endcolumn": 35,
          "description": "The method \u0027setValue(Object)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 140,
          "begincolumn": 28,
          "endline": 140,
          "endcolumn": 34,
          "description": "The method \u0027equals(Object)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 143,
          "begincolumn": 24,
          "endline": 143,
          "endcolumn": 32,
          "description": "The method \u0027hashCode()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\CharSetUtilsTest.java",
      "violations": [
        {
          "beginline": 80,
          "begincolumn": 24,
          "endline": 80,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 96,
          "begincolumn": 17,
          "endline": 96,
          "endcolumn": 28,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 96,
          "begincolumn": 17,
          "endline": 96,
          "endcolumn": 28,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 110,
          "begincolumn": 17,
          "endline": 110,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 110,
          "begincolumn": 17,
          "endline": 110,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 126,
          "begincolumn": 17,
          "endline": 126,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 126,
          "begincolumn": 17,
          "endline": 126,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\LangTestSuite.java",
      "violations": [
        {
          "beginline": 86,
          "begincolumn": 24,
          "endline": 86,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\NumberRangeTest.java",
      "violations": [
        {
          "beginline": 87,
          "begincolumn": 22,
          "endline": 87,
          "endcolumn": 36,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 88,
          "begincolumn": 22,
          "endline": 88,
          "endcolumn": 37,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 89,
          "begincolumn": 22,
          "endline": 89,
          "endcolumn": 37,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 90,
          "begincolumn": 22,
          "endline": 90,
          "endcolumn": 37,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 91,
          "begincolumn": 22,
          "endline": 91,
          "endcolumn": 37,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 97,
          "begincolumn": 24,
          "endline": 97,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 104,
          "begincolumn": 17,
          "endline": 104,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 104,
          "begincolumn": 17,
          "endline": 104,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 123,
          "begincolumn": 17,
          "endline": 123,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 123,
          "begincolumn": 17,
          "endline": 123,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 146,
          "begincolumn": 17,
          "endline": 146,
          "endcolumn": 34,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 146,
          "begincolumn": 17,
          "endline": 146,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 178,
          "begincolumn": 14,
          "endline": 178,
          "endcolumn": 43,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 178,
          "begincolumn": 14,
          "endline": 178,
          "endcolumn": 43,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 182,
          "begincolumn": 16,
          "endline": 182,
          "endcolumn": 18,
          "description": "Avoid unused local variables such as \u0027nr\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 194,
          "begincolumn": 16,
          "endline": 194,
          "endcolumn": 18,
          "description": "Avoid unused local variables such as \u0027nr\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 206,
          "begincolumn": 16,
          "endline": 206,
          "endcolumn": 18,
          "description": "Avoid unused local variables such as \u0027nr\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 218,
          "begincolumn": 17,
          "endline": 218,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\NumberUtilsTest.java",
      "violations": [
        {
          "beginline": 77,
          "begincolumn": 24,
          "endline": 77,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 88,
          "begincolumn": 17,
          "endline": 88,
          "endcolumn": 38,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 88,
          "begincolumn": 17,
          "endline": 88,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 96,
          "begincolumn": 17,
          "endline": 96,
          "endcolumn": 39,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 96,
          "begincolumn": 17,
          "endline": 96,
          "endcolumn": 39,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 101,
          "begincolumn": 17,
          "endline": 101,
          "endcolumn": 33,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 101,
          "begincolumn": 17,
          "endline": 101,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 103,
          "begincolumn": 55,
          "endline": 103,
          "endcolumn": 74,
          "description": "Do not use `new Float(...)`, prefer `Float.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 104,
          "begincolumn": 55,
          "endline": 104,
          "endcolumn": 75,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 105,
          "begincolumn": 55,
          "endline": 105,
          "endcolumn": 75,
          "description": "Do not use `new Double(...)`, prefer `Double.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 106,
          "begincolumn": 55,
          "endline": 106,
          "endcolumn": 74,
          "description": "Do not use `new Float(...)`, prefer `Float.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 107,
          "begincolumn": 55,
          "endline": 107,
          "endcolumn": 87,
          "description": "Do not use `new Long(...)`, prefer `Long.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 108,
          "begincolumn": 55,
          "endline": 108,
          "endcolumn": 70,
          "description": "Do not use `new Long(...)`, prefer `Long.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 109,
          "begincolumn": 55,
          "endline": 109,
          "endcolumn": 75,
          "description": "Do not use `new Float(...)`, prefer `Float.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 110,
          "begincolumn": 55,
          "endline": 110,
          "endcolumn": 76,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 113,
          "begincolumn": 56,
          "endline": 113,
          "endcolumn": 77,
          "description": "Do not use `new Double(...)`, prefer `Double.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 114,
          "begincolumn": 56,
          "endline": 114,
          "endcolumn": 75,
          "description": "Do not use `new Float(...)`, prefer `Float.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 115,
          "begincolumn": 56,
          "endline": 115,
          "endcolumn": 78,
          "description": "Do not use `new Double(...)`, prefer `Double.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 116,
          "begincolumn": 56,
          "endline": 116,
          "endcolumn": 78,
          "description": "Do not use `new Double(...)`, prefer `Double.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 120,
          "begincolumn": 13,
          "endline": 120,
          "endcolumn": 47,
          "description": "Do not use `new Long(...)`, prefer `Long.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 124,
          "begincolumn": 13,
          "endline": 124,
          "endcolumn": 47,
          "description": "Do not use `new Long(...)`, prefer `Long.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 133,
          "begincolumn": 17,
          "endline": 133,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 134,
          "begincolumn": 52,
          "endline": 134,
          "endcolumn": 71,
          "description": "Do not use `new Float(...)`, prefer `Float.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 137,
          "begincolumn": 17,
          "endline": 137,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 138,
          "begincolumn": 53,
          "endline": 138,
          "endcolumn": 73,
          "description": "Do not use `new Double(...)`, prefer `Double.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 141,
          "begincolumn": 17,
          "endline": 141,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 142,
          "begincolumn": 54,
          "endline": 142,
          "endcolumn": 74,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 145,
          "begincolumn": 17,
          "endline": 145,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 146,
          "begincolumn": 54,
          "endline": 146,
          "endcolumn": 71,
          "description": "Do not use `new Long(...)`, prefer `Long.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 149,
          "begincolumn": 17,
          "endline": 149,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 153,
          "begincolumn": 17,
          "endline": 153,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 157,
          "begincolumn": 17,
          "endline": 157,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 157,
          "begincolumn": 17,
          "endline": 157,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 166,
          "begincolumn": 17,
          "endline": 166,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 166,
          "begincolumn": 17,
          "endline": 166,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 175,
          "begincolumn": 17,
          "endline": 175,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 175,
          "begincolumn": 17,
          "endline": 175,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 184,
          "begincolumn": 17,
          "endline": 184,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 184,
          "begincolumn": 17,
          "endline": 184,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 193,
          "begincolumn": 17,
          "endline": 193,
          "endcolumn": 34,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 193,
          "begincolumn": 17,
          "endline": 193,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 285,
          "begincolumn": 17,
          "endline": 285,
          "endcolumn": 33,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 285,
          "begincolumn": 17,
          "endline": 285,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 377,
          "begincolumn": 17,
          "endline": 377,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 377,
          "begincolumn": 17,
          "endline": 377,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 390,
          "begincolumn": 17,
          "endline": 390,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 390,
          "begincolumn": 17,
          "endline": 390,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\ObjectUtilsTest.java",
      "violations": [
        {
          "beginline": 81,
          "begincolumn": 24,
          "endline": 81,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 97,
          "begincolumn": 17,
          "endline": 97,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 97,
          "begincolumn": 17,
          "endline": 97,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 104,
          "begincolumn": 17,
          "endline": 104,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 104,
          "begincolumn": 17,
          "endline": 104,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 112,
          "begincolumn": 17,
          "endline": 112,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 112,
          "begincolumn": 17,
          "endline": 112,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 116,
          "begincolumn": 21,
          "endline": 116,
          "endcolumn": 36,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 123,
          "begincolumn": 17,
          "endline": 123,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 123,
          "begincolumn": 17,
          "endline": 123,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\RandomStringUtilsTest.java",
      "violations": [
        {
          "beginline": 95,
          "begincolumn": 17,
          "endline": 95,
          "endcolumn": 38,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 95,
          "begincolumn": 17,
          "endline": 95,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\SerializationUtilsTest.java",
      "violations": [
        {
          "beginline": 78,
          "begincolumn": 13,
          "endline": 78,
          "endcolumn": 20,
          "description": "Avoid using implementation types like \u0027HashMap\u0027; use the interface instead",
          "rule": "LooseCoupling",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#loosecoupling"
        },
        {
          "beginline": 88,
          "begincolumn": 24,
          "endline": 88,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 98,
          "begincolumn": 20,
          "endline": 98,
          "endcolumn": 34,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 110,
          "begincolumn": 17,
          "endline": 110,
          "endcolumn": 36,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 110,
          "begincolumn": 17,
          "endline": 110,
          "endcolumn": 36,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 128,
          "begincolumn": 17,
          "endline": 128,
          "endcolumn": 50,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 139,
          "begincolumn": 17,
          "endline": 139,
          "endcolumn": 43,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 139,
          "begincolumn": 17,
          "endline": 139,
          "endcolumn": 43,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 157,
          "begincolumn": 17,
          "endline": 157,
          "endcolumn": 43,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 158,
          "begincolumn": 31,
          "endline": 158,
          "endcolumn": 41,
          "description": "Avoid unused local variables such as \u0027streamTest\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 167,
          "begincolumn": 17,
          "endline": 167,
          "endcolumn": 44,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 168,
          "begincolumn": 31,
          "endline": 168,
          "endcolumn": 41,
          "description": "Avoid unused local variables such as \u0027streamTest\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 179,
          "begincolumn": 17,
          "endline": 179,
          "endcolumn": 38,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 179,
          "begincolumn": 17,
          "endline": 179,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 191,
          "begincolumn": 9,
          "endline": 191,
          "endcolumn": 16,
          "description": "Avoid using implementation types like \u0027HashMap\u0027; use the interface instead",
          "rule": "LooseCoupling",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#loosecoupling"
        },
        {
          "beginline": 199,
          "begincolumn": 17,
          "endline": 199,
          "endcolumn": 44,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 211,
          "begincolumn": 17,
          "endline": 211,
          "endcolumn": 42,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 220,
          "begincolumn": 17,
          "endline": 220,
          "endcolumn": 47,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 231,
          "begincolumn": 17,
          "endline": 231,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 231,
          "begincolumn": 17,
          "endline": 231,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 247,
          "begincolumn": 17,
          "endline": 247,
          "endcolumn": 49,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 257,
          "begincolumn": 17,
          "endline": 257,
          "endcolumn": 39,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 257,
          "begincolumn": 17,
          "endline": 257,
          "endcolumn": 39,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 275,
          "begincolumn": 17,
          "endline": 275,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 275,
          "begincolumn": 17,
          "endline": 275,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 286,
          "begincolumn": 9,
          "endline": 286,
          "endcolumn": 16,
          "description": "Avoid using implementation types like \u0027HashMap\u0027; use the interface instead",
          "rule": "LooseCoupling",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#loosecoupling"
        },
        {
          "beginline": 294,
          "begincolumn": 17,
          "endline": 294,
          "endcolumn": 43,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 305,
          "begincolumn": 17,
          "endline": 305,
          "endcolumn": 41,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 314,
          "begincolumn": 17,
          "endline": 314,
          "endcolumn": 46,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 325,
          "begincolumn": 17,
          "endline": 325,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 325,
          "begincolumn": 17,
          "endline": 325,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 330,
          "begincolumn": 9,
          "endline": 330,
          "endcolumn": 16,
          "description": "Avoid using implementation types like \u0027HashMap\u0027; use the interface instead",
          "rule": "LooseCoupling",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#loosecoupling"
        },
        {
          "beginline": 338,
          "begincolumn": 17,
          "endline": 338,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 343,
          "begincolumn": 17,
          "endline": 343,
          "endcolumn": 40,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\StringUtilsEqualsIndexOfTest.java",
      "violations": [
        {
          "beginline": 82,
          "begincolumn": 24,
          "endline": 82,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 98,
          "begincolumn": 17,
          "endline": 98,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 98,
          "begincolumn": 17,
          "endline": 98,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 108,
          "begincolumn": 17,
          "endline": 108,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 108,
          "begincolumn": 17,
          "endline": 108,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 118,
          "begincolumn": 17,
          "endline": 118,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 118,
          "begincolumn": 17,
          "endline": 118,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 127,
          "begincolumn": 17,
          "endline": 127,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 127,
          "begincolumn": 17,
          "endline": 127,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\StringUtilsIsTest.java",
      "violations": [
        {
          "beginline": 77,
          "begincolumn": 24,
          "endline": 77,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 93,
          "begincolumn": 17,
          "endline": 93,
          "endcolumn": 28,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 93,
          "begincolumn": 17,
          "endline": 93,
          "endcolumn": 28,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 107,
          "begincolumn": 17,
          "endline": 107,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 107,
          "begincolumn": 17,
          "endline": 107,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 121,
          "begincolumn": 17,
          "endline": 121,
          "endcolumn": 33,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 121,
          "begincolumn": 17,
          "endline": 121,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 134,
          "begincolumn": 17,
          "endline": 134,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 134,
          "begincolumn": 17,
          "endline": 134,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 144,
          "begincolumn": 17,
          "endline": 144,
          "endcolumn": 33,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 144,
          "begincolumn": 17,
          "endline": 144,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 158,
          "begincolumn": 17,
          "endline": 158,
          "endcolumn": 40,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 158,
          "begincolumn": 17,
          "endline": 158,
          "endcolumn": 40,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 172,
          "begincolumn": 17,
          "endline": 172,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 172,
          "begincolumn": 17,
          "endline": 172,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 189,
          "begincolumn": 17,
          "endline": 189,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 189,
          "begincolumn": 17,
          "endline": 189,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\StringUtilsSubstringTest.java",
      "violations": [
        {
          "beginline": 83,
          "begincolumn": 24,
          "endline": 83,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 100,
          "begincolumn": 17,
          "endline": 100,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 100,
          "begincolumn": 17,
          "endline": 100,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 107,
          "begincolumn": 17,
          "endline": 107,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 107,
          "begincolumn": 17,
          "endline": 107,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 116,
          "begincolumn": 17,
          "endline": 116,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 116,
          "begincolumn": 17,
          "endline": 116,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 126,
          "begincolumn": 17,
          "endline": 126,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 135,
          "begincolumn": 17,
          "endline": 135,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 135,
          "begincolumn": 17,
          "endline": 135,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 145,
          "begincolumn": 17,
          "endline": 145,
          "endcolumn": 28,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 154,
          "begincolumn": 17,
          "endline": 154,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 154,
          "begincolumn": 17,
          "endline": 154,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 167,
          "begincolumn": 17,
          "endline": 167,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 176,
          "begincolumn": 17,
          "endline": 176,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 185,
          "begincolumn": 17,
          "endline": 185,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 194,
          "begincolumn": 17,
          "endline": 194,
          "endcolumn": 33,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 194,
          "begincolumn": 17,
          "endline": 194,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 203,
          "begincolumn": 17,
          "endline": 203,
          "endcolumn": 36,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 203,
          "begincolumn": 17,
          "endline": 203,
          "endcolumn": 36,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\StringUtilsTest.java",
      "violations": [
        {
          "beginline": 84,
          "begincolumn": 33,
          "endline": 84,
          "endcolumn": 42,
          "description": "Avoid unused private fields such as \u0027UPPER_FOO\u0027.",
          "rule": "UnusedPrivateField",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedprivatefield"
        },
        {
          "beginline": 96,
          "begincolumn": 24,
          "endline": 96,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 112,
          "begincolumn": 17,
          "endline": 112,
          "endcolumn": 34,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 112,
          "begincolumn": 17,
          "endline": 112,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 148,
          "begincolumn": 17,
          "endline": 148,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 148,
          "begincolumn": 17,
          "endline": 148,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 159,
          "begincolumn": 17,
          "endline": 159,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 159,
          "begincolumn": 17,
          "endline": 159,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 192,
          "begincolumn": 17,
          "endline": 192,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 192,
          "begincolumn": 17,
          "endline": 192,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 202,
          "begincolumn": 17,
          "endline": 202,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 208,
          "begincolumn": 17,
          "endline": 208,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 214,
          "begincolumn": 17,
          "endline": 214,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 220,
          "begincolumn": 17,
          "endline": 220,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 220,
          "begincolumn": 17,
          "endline": 220,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 245,
          "begincolumn": 17,
          "endline": 245,
          "endcolumn": 33,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 245,
          "begincolumn": 17,
          "endline": 245,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 266,
          "begincolumn": 17,
          "endline": 266,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 266,
          "begincolumn": 17,
          "endline": 266,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 282,
          "begincolumn": 17,
          "endline": 282,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 282,
          "begincolumn": 17,
          "endline": 282,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 297,
          "begincolumn": 17,
          "endline": 297,
          "endcolumn": 36,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 297,
          "begincolumn": 17,
          "endline": 297,
          "endcolumn": 36,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 316,
          "begincolumn": 17,
          "endline": 316,
          "endcolumn": 43,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 316,
          "begincolumn": 17,
          "endline": 316,
          "endcolumn": 43,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 335,
          "begincolumn": 17,
          "endline": 335,
          "endcolumn": 33,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 335,
          "begincolumn": 17,
          "endline": 335,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\StringUtilsTrimEmptyTest.java",
      "violations": [
        {
          "beginline": 79,
          "begincolumn": 24,
          "endline": 79,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 95,
          "begincolumn": 17,
          "endline": 95,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 95,
          "begincolumn": 17,
          "endline": 95,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 103,
          "begincolumn": 17,
          "endline": 103,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 103,
          "begincolumn": 17,
          "endline": 103,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 111,
          "begincolumn": 17,
          "endline": 111,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 111,
          "begincolumn": 17,
          "endline": 111,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 118,
          "begincolumn": 17,
          "endline": 118,
          "endcolumn": 28,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 118,
          "begincolumn": 17,
          "endline": 118,
          "endcolumn": 28,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 125,
          "begincolumn": 17,
          "endline": 125,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 125,
          "begincolumn": 17,
          "endline": 125,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 147,
          "begincolumn": 17,
          "endline": 147,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 147,
          "begincolumn": 17,
          "endline": 147,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 199,
          "begincolumn": 49,
          "endline": 199,
          "endcolumn": 60,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\builder\\BuilderTestSuite.java",
      "violations": [
        {
          "beginline": 85,
          "begincolumn": 24,
          "endline": 85,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\builder\\CompareToBuilderTest.java",
      "violations": [
        {
          "beginline": 78,
          "begincolumn": 24,
          "endline": 78,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 99,
          "begincolumn": 24,
          "endline": 99,
          "endcolumn": 30,
          "description": "The method \u0027equals(Object)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 117,
          "begincolumn": 14,
          "endline": 117,
          "endcolumn": 23,
          "description": "The method \u0027compareTo(Object)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 123,
          "begincolumn": 17,
          "endline": 123,
          "endcolumn": 38,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 123,
          "begincolumn": 17,
          "endline": 123,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 133,
          "begincolumn": 17,
          "endline": 133,
          "endcolumn": 41,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 143,
          "begincolumn": 17,
          "endline": 143,
          "endcolumn": 41,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 154,
          "begincolumn": 17,
          "endline": 154,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 154,
          "begincolumn": 17,
          "endline": 154,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 164,
          "begincolumn": 17,
          "endline": 164,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 174,
          "begincolumn": 17,
          "endline": 174,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 185,
          "begincolumn": 17,
          "endline": 185,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 185,
          "begincolumn": 17,
          "endline": 185,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 197,
          "begincolumn": 17,
          "endline": 197,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 197,
          "begincolumn": 17,
          "endline": 197,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 209,
          "begincolumn": 17,
          "endline": 209,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 209,
          "begincolumn": 17,
          "endline": 209,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 221,
          "begincolumn": 17,
          "endline": 221,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 221,
          "begincolumn": 17,
          "endline": 221,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 233,
          "begincolumn": 17,
          "endline": 233,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 233,
          "begincolumn": 17,
          "endline": 233,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 245,
          "begincolumn": 17,
          "endline": 245,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 245,
          "begincolumn": 17,
          "endline": 245,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 265,
          "begincolumn": 17,
          "endline": 265,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 265,
          "begincolumn": 17,
          "endline": 265,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 285,
          "begincolumn": 17,
          "endline": 285,
          "endcolumn": 28,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 285,
          "begincolumn": 17,
          "endline": 285,
          "endcolumn": 28,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 294,
          "begincolumn": 17,
          "endline": 294,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 294,
          "begincolumn": 17,
          "endline": 294,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 316,
          "begincolumn": 17,
          "endline": 316,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 328,
          "begincolumn": 17,
          "endline": 328,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 328,
          "begincolumn": 17,
          "endline": 328,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 350,
          "begincolumn": 17,
          "endline": 350,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 350,
          "begincolumn": 17,
          "endline": 350,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 372,
          "begincolumn": 17,
          "endline": 372,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 372,
          "begincolumn": 17,
          "endline": 372,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 394,
          "begincolumn": 17,
          "endline": 394,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 394,
          "begincolumn": 17,
          "endline": 394,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 416,
          "begincolumn": 17,
          "endline": 416,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 416,
          "begincolumn": 17,
          "endline": 416,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 438,
          "begincolumn": 17,
          "endline": 438,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 438,
          "begincolumn": 17,
          "endline": 438,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 460,
          "begincolumn": 17,
          "endline": 460,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 460,
          "begincolumn": 17,
          "endline": 460,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 482,
          "begincolumn": 17,
          "endline": 482,
          "endcolumn": 33,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 482,
          "begincolumn": 17,
          "endline": 482,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 504,
          "begincolumn": 17,
          "endline": 504,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 504,
          "begincolumn": 17,
          "endline": 504,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 527,
          "begincolumn": 17,
          "endline": 527,
          "endcolumn": 34,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 527,
          "begincolumn": 17,
          "endline": 527,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 550,
          "begincolumn": 17,
          "endline": 550,
          "endcolumn": 36,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 550,
          "begincolumn": 17,
          "endline": 550,
          "endcolumn": 36,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 573,
          "begincolumn": 17,
          "endline": 573,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 573,
          "begincolumn": 17,
          "endline": 573,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 596,
          "begincolumn": 17,
          "endline": 596,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 596,
          "begincolumn": 17,
          "endline": 596,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 619,
          "begincolumn": 17,
          "endline": 619,
          "endcolumn": 36,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 619,
          "begincolumn": 17,
          "endline": 619,
          "endcolumn": 36,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 642,
          "begincolumn": 17,
          "endline": 642,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 642,
          "begincolumn": 17,
          "endline": 642,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 665,
          "begincolumn": 17,
          "endline": 665,
          "endcolumn": 38,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 665,
          "begincolumn": 17,
          "endline": 665,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 688,
          "begincolumn": 17,
          "endline": 688,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 688,
          "begincolumn": 17,
          "endline": 688,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 715,
          "begincolumn": 17,
          "endline": 715,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 715,
          "begincolumn": 17,
          "endline": 715,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 740,
          "begincolumn": 17,
          "endline": 740,
          "endcolumn": 46,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 740,
          "begincolumn": 17,
          "endline": 740,
          "endcolumn": 46,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 765,
          "begincolumn": 17,
          "endline": 765,
          "endcolumn": 44,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 765,
          "begincolumn": 17,
          "endline": 765,
          "endcolumn": 44,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 789,
          "begincolumn": 17,
          "endline": 789,
          "endcolumn": 43,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 789,
          "begincolumn": 17,
          "endline": 789,
          "endcolumn": 43,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 813,
          "begincolumn": 17,
          "endline": 813,
          "endcolumn": 45,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 813,
          "begincolumn": 17,
          "endline": 813,
          "endcolumn": 45,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 837,
          "begincolumn": 17,
          "endline": 837,
          "endcolumn": 44,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 837,
          "begincolumn": 17,
          "endline": 837,
          "endcolumn": 44,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 861,
          "begincolumn": 17,
          "endline": 861,
          "endcolumn": 44,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 861,
          "begincolumn": 17,
          "endline": 861,
          "endcolumn": 44,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 885,
          "begincolumn": 17,
          "endline": 885,
          "endcolumn": 46,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 885,
          "begincolumn": 17,
          "endline": 885,
          "endcolumn": 46,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 909,
          "begincolumn": 17,
          "endline": 909,
          "endcolumn": 45,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 909,
          "begincolumn": 17,
          "endline": 909,
          "endcolumn": 45,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 933,
          "begincolumn": 17,
          "endline": 933,
          "endcolumn": 47,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 933,
          "begincolumn": 17,
          "endline": 933,
          "endcolumn": 47,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\builder\\DefaultToStringStyleTest.java",
      "violations": [
        {
          "beginline": 72,
          "begincolumn": 34,
          "endline": 72,
          "endcolumn": 48,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 83,
          "begincolumn": 24,
          "endline": 83,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 101,
          "begincolumn": 17,
          "endline": 101,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 105,
          "begincolumn": 17,
          "endline": 105,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 105,
          "begincolumn": 17,
          "endline": 105,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 106,
          "begincolumn": 22,
          "endline": 106,
          "endcolumn": 36,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 107,
          "begincolumn": 22,
          "endline": 107,
          "endcolumn": 36,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 122,
          "begincolumn": 17,
          "endline": 122,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 122,
          "begincolumn": 17,
          "endline": 122,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 128,
          "begincolumn": 17,
          "endline": 128,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 128,
          "begincolumn": 17,
          "endline": 128,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 137,
          "begincolumn": 17,
          "endline": 137,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 137,
          "begincolumn": 17,
          "endline": 137,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 146,
          "begincolumn": 17,
          "endline": 146,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 146,
          "begincolumn": 17,
          "endline": 146,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\builder\\EqualsBuilderTest.java",
      "violations": [
        {
          "beginline": 77,
          "begincolumn": 24,
          "endline": 77,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 98,
          "begincolumn": 24,
          "endline": 98,
          "endcolumn": 30,
          "description": "The method \u0027equals(Object)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 118,
          "begincolumn": 17,
          "endline": 118,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 118,
          "begincolumn": 17,
          "endline": 118,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 133,
          "begincolumn": 17,
          "endline": 133,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 133,
          "begincolumn": 17,
          "endline": 133,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 148,
          "begincolumn": 17,
          "endline": 148,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 148,
          "begincolumn": 17,
          "endline": 148,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 155,
          "begincolumn": 17,
          "endline": 155,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 155,
          "begincolumn": 17,
          "endline": 155,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 162,
          "begincolumn": 17,
          "endline": 162,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 162,
          "begincolumn": 17,
          "endline": 162,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 169,
          "begincolumn": 17,
          "endline": 169,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 169,
          "begincolumn": 17,
          "endline": 169,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 176,
          "begincolumn": 17,
          "endline": 176,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 176,
          "begincolumn": 17,
          "endline": 176,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 183,
          "begincolumn": 17,
          "endline": 183,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 183,
          "begincolumn": 17,
          "endline": 183,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 193,
          "begincolumn": 17,
          "endline": 193,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 193,
          "begincolumn": 17,
          "endline": 193,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 203,
          "begincolumn": 17,
          "endline": 203,
          "endcolumn": 28,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 203,
          "begincolumn": 17,
          "endline": 203,
          "endcolumn": 28,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 210,
          "begincolumn": 17,
          "endline": 210,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 210,
          "begincolumn": 17,
          "endline": 210,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 228,
          "begincolumn": 17,
          "endline": 228,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 228,
          "begincolumn": 17,
          "endline": 228,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 246,
          "begincolumn": 17,
          "endline": 246,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 246,
          "begincolumn": 17,
          "endline": 246,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 264,
          "begincolumn": 17,
          "endline": 264,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 264,
          "begincolumn": 17,
          "endline": 264,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 282,
          "begincolumn": 17,
          "endline": 282,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 282,
          "begincolumn": 17,
          "endline": 282,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 300,
          "begincolumn": 17,
          "endline": 300,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 300,
          "begincolumn": 17,
          "endline": 300,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 318,
          "begincolumn": 17,
          "endline": 318,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 318,
          "begincolumn": 17,
          "endline": 318,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 336,
          "begincolumn": 17,
          "endline": 336,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 336,
          "begincolumn": 17,
          "endline": 336,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 354,
          "begincolumn": 17,
          "endline": 354,
          "endcolumn": 33,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 354,
          "begincolumn": 17,
          "endline": 354,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 372,
          "begincolumn": 17,
          "endline": 372,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 372,
          "begincolumn": 17,
          "endline": 372,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 387,
          "begincolumn": 17,
          "endline": 387,
          "endcolumn": 34,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 387,
          "begincolumn": 17,
          "endline": 387,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 402,
          "begincolumn": 17,
          "endline": 402,
          "endcolumn": 36,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 402,
          "begincolumn": 17,
          "endline": 402,
          "endcolumn": 36,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 417,
          "begincolumn": 17,
          "endline": 417,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 417,
          "begincolumn": 17,
          "endline": 417,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 432,
          "begincolumn": 17,
          "endline": 432,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 432,
          "begincolumn": 17,
          "endline": 432,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 446,
          "begincolumn": 17,
          "endline": 446,
          "endcolumn": 36,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 446,
          "begincolumn": 17,
          "endline": 446,
          "endcolumn": 36,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 461,
          "begincolumn": 17,
          "endline": 461,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 461,
          "begincolumn": 17,
          "endline": 461,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 476,
          "begincolumn": 17,
          "endline": 476,
          "endcolumn": 38,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 476,
          "begincolumn": 17,
          "endline": 476,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 491,
          "begincolumn": 17,
          "endline": 491,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 491,
          "begincolumn": 17,
          "endline": 491,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 508,
          "begincolumn": 17,
          "endline": 508,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 508,
          "begincolumn": 17,
          "endline": 508,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 515,
          "begincolumn": 28,
          "endline": 515,
          "endcolumn": 32,
          "description": "Avoid unused local variables such as \u0027obj1\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 516,
          "begincolumn": 28,
          "endline": 516,
          "endcolumn": 32,
          "description": "Avoid unused local variables such as \u0027obj2\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 527,
          "begincolumn": 17,
          "endline": 527,
          "endcolumn": 46,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 527,
          "begincolumn": 17,
          "endline": 527,
          "endcolumn": 46,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 544,
          "begincolumn": 17,
          "endline": 544,
          "endcolumn": 44,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 544,
          "begincolumn": 17,
          "endline": 544,
          "endcolumn": 44,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 561,
          "begincolumn": 17,
          "endline": 561,
          "endcolumn": 43,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 561,
          "begincolumn": 17,
          "endline": 561,
          "endcolumn": 43,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 578,
          "begincolumn": 17,
          "endline": 578,
          "endcolumn": 45,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 578,
          "begincolumn": 17,
          "endline": 578,
          "endcolumn": 45,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 595,
          "begincolumn": 17,
          "endline": 595,
          "endcolumn": 44,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 595,
          "begincolumn": 17,
          "endline": 595,
          "endcolumn": 44,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 612,
          "begincolumn": 17,
          "endline": 612,
          "endcolumn": 44,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 612,
          "begincolumn": 17,
          "endline": 612,
          "endcolumn": 44,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 629,
          "begincolumn": 17,
          "endline": 629,
          "endcolumn": 46,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 629,
          "begincolumn": 17,
          "endline": 629,
          "endcolumn": 46,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 646,
          "begincolumn": 17,
          "endline": 646,
          "endcolumn": 45,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 646,
          "begincolumn": 17,
          "endline": 646,
          "endcolumn": 45,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 663,
          "begincolumn": 17,
          "endline": 663,
          "endcolumn": 47,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 663,
          "begincolumn": 17,
          "endline": 663,
          "endcolumn": 47,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\builder\\HashCodeBuilderTest.java",
      "violations": [
        {
          "beginline": 76,
          "begincolumn": 24,
          "endline": 76,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 92,
          "begincolumn": 17,
          "endline": 92,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 102,
          "begincolumn": 17,
          "endline": 102,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 117,
          "begincolumn": 24,
          "endline": 117,
          "endcolumn": 30,
          "description": "The method \u0027equals(Object)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 137,
          "begincolumn": 17,
          "endline": 137,
          "endcolumn": 39,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 137,
          "begincolumn": 17,
          "endline": 137,
          "endcolumn": 39,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 142,
          "begincolumn": 17,
          "endline": 142,
          "endcolumn": 42,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 151,
          "begincolumn": 17,
          "endline": 151,
          "endcolumn": 42,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 160,
          "begincolumn": 17,
          "endline": 160,
          "endcolumn": 42,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 169,
          "begincolumn": 17,
          "endline": 169,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 169,
          "begincolumn": 17,
          "endline": 169,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 176,
          "begincolumn": 17,
          "endline": 176,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 176,
          "begincolumn": 17,
          "endline": 176,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 181,
          "begincolumn": 17,
          "endline": 181,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 181,
          "begincolumn": 17,
          "endline": 181,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 186,
          "begincolumn": 17,
          "endline": 186,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 186,
          "begincolumn": 17,
          "endline": 186,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 191,
          "begincolumn": 17,
          "endline": 191,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 191,
          "begincolumn": 17,
          "endline": 191,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 196,
          "begincolumn": 17,
          "endline": 196,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 196,
          "begincolumn": 17,
          "endline": 196,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 201,
          "begincolumn": 17,
          "endline": 201,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 201,
          "begincolumn": 17,
          "endline": 201,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 208,
          "begincolumn": 17,
          "endline": 208,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 208,
          "begincolumn": 17,
          "endline": 208,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 215,
          "begincolumn": 17,
          "endline": 215,
          "endcolumn": 28,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 215,
          "begincolumn": 17,
          "endline": 215,
          "endcolumn": 28,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 220,
          "begincolumn": 17,
          "endline": 220,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 220,
          "begincolumn": 17,
          "endline": 220,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 230,
          "begincolumn": 17,
          "endline": 230,
          "endcolumn": 40,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 230,
          "begincolumn": 17,
          "endline": 230,
          "endcolumn": 40,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 239,
          "begincolumn": 17,
          "endline": 239,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 239,
          "begincolumn": 17,
          "endline": 239,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 251,
          "begincolumn": 17,
          "endline": 251,
          "endcolumn": 38,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 251,
          "begincolumn": 17,
          "endline": 251,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 262,
          "begincolumn": 17,
          "endline": 262,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 262,
          "begincolumn": 17,
          "endline": 262,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 272,
          "begincolumn": 17,
          "endline": 272,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 272,
          "begincolumn": 17,
          "endline": 272,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 281,
          "begincolumn": 17,
          "endline": 281,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 281,
          "begincolumn": 17,
          "endline": 281,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 291,
          "begincolumn": 17,
          "endline": 291,
          "endcolumn": 39,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 291,
          "begincolumn": 17,
          "endline": 291,
          "endcolumn": 39,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 300,
          "begincolumn": 17,
          "endline": 300,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 300,
          "begincolumn": 17,
          "endline": 300,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 310,
          "begincolumn": 17,
          "endline": 310,
          "endcolumn": 38,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 310,
          "begincolumn": 17,
          "endline": 310,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 319,
          "begincolumn": 17,
          "endline": 319,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 319,
          "begincolumn": 17,
          "endline": 319,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 329,
          "begincolumn": 17,
          "endline": 329,
          "endcolumn": 38,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 329,
          "begincolumn": 17,
          "endline": 329,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 338,
          "begincolumn": 17,
          "endline": 338,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 338,
          "begincolumn": 17,
          "endline": 338,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 352,
          "begincolumn": 17,
          "endline": 352,
          "endcolumn": 40,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 352,
          "begincolumn": 17,
          "endline": 352,
          "endcolumn": 40,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 365,
          "begincolumn": 17,
          "endline": 365,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 365,
          "begincolumn": 17,
          "endline": 365,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 377,
          "begincolumn": 17,
          "endline": 377,
          "endcolumn": 39,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 377,
          "begincolumn": 17,
          "endline": 377,
          "endcolumn": 39,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 388,
          "begincolumn": 17,
          "endline": 388,
          "endcolumn": 33,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 388,
          "begincolumn": 17,
          "endline": 388,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 398,
          "begincolumn": 17,
          "endline": 398,
          "endcolumn": 41,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 398,
          "begincolumn": 17,
          "endline": 398,
          "endcolumn": 41,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 407,
          "begincolumn": 17,
          "endline": 407,
          "endcolumn": 38,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 407,
          "begincolumn": 17,
          "endline": 407,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\builder\\MultiLineToStringStyleTest.java",
      "violations": [
        {
          "beginline": 74,
          "begincolumn": 34,
          "endline": 74,
          "endcolumn": 48,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 85,
          "begincolumn": 24,
          "endline": 85,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 103,
          "begincolumn": 17,
          "endline": 103,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 107,
          "begincolumn": 17,
          "endline": 107,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 107,
          "begincolumn": 17,
          "endline": 107,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 108,
          "begincolumn": 22,
          "endline": 108,
          "endcolumn": 36,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 109,
          "begincolumn": 22,
          "endline": 109,
          "endcolumn": 36,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 124,
          "begincolumn": 17,
          "endline": 124,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 124,
          "begincolumn": 17,
          "endline": 124,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 130,
          "begincolumn": 17,
          "endline": 130,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 130,
          "begincolumn": 17,
          "endline": 130,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 139,
          "begincolumn": 17,
          "endline": 139,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 139,
          "begincolumn": 17,
          "endline": 139,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 148,
          "begincolumn": 17,
          "endline": 148,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 148,
          "begincolumn": 17,
          "endline": 148,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\builder\\NoFieldNamesToStringStyleTest.java",
      "violations": [
        {
          "beginline": 72,
          "begincolumn": 34,
          "endline": 72,
          "endcolumn": 48,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 83,
          "begincolumn": 24,
          "endline": 83,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 101,
          "begincolumn": 17,
          "endline": 101,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 105,
          "begincolumn": 17,
          "endline": 105,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 105,
          "begincolumn": 17,
          "endline": 105,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 106,
          "begincolumn": 22,
          "endline": 106,
          "endcolumn": 36,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 107,
          "begincolumn": 22,
          "endline": 107,
          "endcolumn": 36,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 122,
          "begincolumn": 17,
          "endline": 122,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 122,
          "begincolumn": 17,
          "endline": 122,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 128,
          "begincolumn": 17,
          "endline": 128,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 128,
          "begincolumn": 17,
          "endline": 128,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 137,
          "begincolumn": 17,
          "endline": 137,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 137,
          "begincolumn": 17,
          "endline": 137,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 146,
          "begincolumn": 17,
          "endline": 146,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 146,
          "begincolumn": 17,
          "endline": 146,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\builder\\SimpleToStringStyleTest.java",
      "violations": [
        {
          "beginline": 72,
          "begincolumn": 34,
          "endline": 72,
          "endcolumn": 48,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 82,
          "begincolumn": 24,
          "endline": 82,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 100,
          "begincolumn": 17,
          "endline": 100,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 104,
          "begincolumn": 17,
          "endline": 104,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 104,
          "begincolumn": 17,
          "endline": 104,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 105,
          "begincolumn": 22,
          "endline": 105,
          "endcolumn": 36,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 106,
          "begincolumn": 22,
          "endline": 106,
          "endcolumn": 36,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 121,
          "begincolumn": 17,
          "endline": 121,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 121,
          "begincolumn": 17,
          "endline": 121,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 127,
          "begincolumn": 17,
          "endline": 127,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 127,
          "begincolumn": 17,
          "endline": 127,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 136,
          "begincolumn": 17,
          "endline": 136,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 136,
          "begincolumn": 17,
          "endline": 136,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 145,
          "begincolumn": 17,
          "endline": 145,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 145,
          "begincolumn": 17,
          "endline": 145,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\builder\\StandardToStringStyleTest.java",
      "violations": [
        {
          "beginline": 72,
          "begincolumn": 34,
          "endline": 72,
          "endcolumn": 48,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 98,
          "begincolumn": 24,
          "endline": 98,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 116,
          "begincolumn": 17,
          "endline": 116,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 120,
          "begincolumn": 17,
          "endline": 120,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 120,
          "begincolumn": 17,
          "endline": 120,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 121,
          "begincolumn": 22,
          "endline": 121,
          "endcolumn": 36,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 122,
          "begincolumn": 22,
          "endline": 122,
          "endcolumn": 36,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 137,
          "begincolumn": 17,
          "endline": 137,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 137,
          "begincolumn": 17,
          "endline": 137,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 143,
          "begincolumn": 17,
          "endline": 143,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 143,
          "begincolumn": 17,
          "endline": 143,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 152,
          "begincolumn": 17,
          "endline": 152,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 152,
          "begincolumn": 17,
          "endline": 152,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 161,
          "begincolumn": 17,
          "endline": 161,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 161,
          "begincolumn": 17,
          "endline": 161,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\builder\\ToStringBuilderTest.java",
      "violations": [
        {
          "beginline": 72,
          "begincolumn": 34,
          "endline": 72,
          "endcolumn": 48,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 83,
          "begincolumn": 24,
          "endline": 83,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 99,
          "begincolumn": 17,
          "endline": 99,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 109,
          "begincolumn": 17,
          "endline": 109,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 109,
          "begincolumn": 17,
          "endline": 109,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 125,
          "begincolumn": 17,
          "endline": 125,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 125,
          "begincolumn": 17,
          "endline": 125,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 142,
          "begincolumn": 17,
          "endline": 142,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 152,
          "begincolumn": 17,
          "endline": 152,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 162,
          "begincolumn": 17,
          "endline": 162,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 166,
          "begincolumn": 17,
          "endline": 166,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 170,
          "begincolumn": 17,
          "endline": 170,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 170,
          "begincolumn": 17,
          "endline": 170,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 171,
          "begincolumn": 22,
          "endline": 171,
          "endcolumn": 36,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 172,
          "begincolumn": 22,
          "endline": 172,
          "endcolumn": 36,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 187,
          "begincolumn": 17,
          "endline": 187,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 187,
          "begincolumn": 17,
          "endline": 187,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 193,
          "begincolumn": 17,
          "endline": 193,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 193,
          "begincolumn": 17,
          "endline": 193,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 199,
          "begincolumn": 17,
          "endline": 199,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 199,
          "begincolumn": 17,
          "endline": 199,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 205,
          "begincolumn": 17,
          "endline": 205,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 205,
          "begincolumn": 17,
          "endline": 205,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 211,
          "begincolumn": 17,
          "endline": 211,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 211,
          "begincolumn": 17,
          "endline": 211,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 217,
          "begincolumn": 17,
          "endline": 217,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 217,
          "begincolumn": 17,
          "endline": 217,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 223,
          "begincolumn": 17,
          "endline": 223,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 223,
          "begincolumn": 17,
          "endline": 223,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 229,
          "begincolumn": 17,
          "endline": 229,
          "endcolumn": 28,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 229,
          "begincolumn": 17,
          "endline": 229,
          "endcolumn": 28,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 236,
          "begincolumn": 17,
          "endline": 236,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 236,
          "begincolumn": 17,
          "endline": 236,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 245,
          "begincolumn": 17,
          "endline": 245,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 245,
          "begincolumn": 17,
          "endline": 245,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 254,
          "begincolumn": 17,
          "endline": 254,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 254,
          "begincolumn": 17,
          "endline": 254,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 263,
          "begincolumn": 17,
          "endline": 263,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 263,
          "begincolumn": 17,
          "endline": 263,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 272,
          "begincolumn": 17,
          "endline": 272,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 272,
          "begincolumn": 17,
          "endline": 272,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 281,
          "begincolumn": 17,
          "endline": 281,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 281,
          "begincolumn": 17,
          "endline": 281,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 290,
          "begincolumn": 17,
          "endline": 290,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 290,
          "begincolumn": 17,
          "endline": 290,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 299,
          "begincolumn": 17,
          "endline": 299,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 299,
          "begincolumn": 17,
          "endline": 299,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 308,
          "begincolumn": 17,
          "endline": 308,
          "endcolumn": 33,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 308,
          "begincolumn": 17,
          "endline": 308,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 318,
          "begincolumn": 17,
          "endline": 318,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 318,
          "begincolumn": 17,
          "endline": 318,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 327,
          "begincolumn": 17,
          "endline": 327,
          "endcolumn": 34,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 327,
          "begincolumn": 17,
          "endline": 327,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 336,
          "begincolumn": 17,
          "endline": 336,
          "endcolumn": 36,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 336,
          "begincolumn": 17,
          "endline": 336,
          "endcolumn": 36,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 345,
          "begincolumn": 17,
          "endline": 345,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 345,
          "begincolumn": 17,
          "endline": 345,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 354,
          "begincolumn": 17,
          "endline": 354,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 354,
          "begincolumn": 17,
          "endline": 354,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 363,
          "begincolumn": 17,
          "endline": 363,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 363,
          "begincolumn": 17,
          "endline": 363,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 372,
          "begincolumn": 17,
          "endline": 372,
          "endcolumn": 36,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 372,
          "begincolumn": 17,
          "endline": 372,
          "endcolumn": 36,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 381,
          "begincolumn": 17,
          "endline": 381,
          "endcolumn": 38,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 381,
          "begincolumn": 17,
          "endline": 381,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\enum\\EnumTest.java",
      "violations": [
        {
          "beginline": 81,
          "begincolumn": 24,
          "endline": 81,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 87,
          "begincolumn": 17,
          "endline": 87,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 87,
          "begincolumn": 17,
          "endline": 87,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 93,
          "begincolumn": 17,
          "endline": 93,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 93,
          "begincolumn": 17,
          "endline": 93,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 99,
          "begincolumn": 17,
          "endline": 99,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 99,
          "begincolumn": 17,
          "endline": 99,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 104,
          "begincolumn": 17,
          "endline": 104,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 108,
          "begincolumn": 17,
          "endline": 108,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 108,
          "begincolumn": 17,
          "endline": 108,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 115,
          "begincolumn": 17,
          "endline": 115,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 115,
          "begincolumn": 17,
          "endline": 115,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 129,
          "begincolumn": 17,
          "endline": 129,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 129,
          "begincolumn": 17,
          "endline": 129,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 145,
          "begincolumn": 17,
          "endline": 145,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 145,
          "begincolumn": 17,
          "endline": 145,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 152,
          "begincolumn": 17,
          "endline": 152,
          "endcolumn": 34,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 152,
          "begincolumn": 17,
          "endline": 152,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\enum\\EnumTestSuite.java",
      "violations": [
        {
          "beginline": 85,
          "begincolumn": 24,
          "endline": 85,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\enum\\EnumUtilsTest.java",
      "violations": [
        {
          "beginline": 81,
          "begincolumn": 24,
          "endline": 81,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 87,
          "begincolumn": 17,
          "endline": 87,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 87,
          "begincolumn": 17,
          "endline": 87,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 94,
          "begincolumn": 17,
          "endline": 94,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 103,
          "begincolumn": 17,
          "endline": 103,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 103,
          "begincolumn": 17,
          "endline": 103,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 111,
          "begincolumn": 17,
          "endline": 111,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 120,
          "begincolumn": 17,
          "endline": 120,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 120,
          "begincolumn": 17,
          "endline": 120,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 130,
          "begincolumn": 17,
          "endline": 130,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 139,
          "begincolumn": 17,
          "endline": 139,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 139,
          "begincolumn": 17,
          "endline": 139,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 146,
          "begincolumn": 17,
          "endline": 146,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 155,
          "begincolumn": 17,
          "endline": 155,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 155,
          "begincolumn": 17,
          "endline": 155,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 162,
          "begincolumn": 17,
          "endline": 162,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\enum\\ValuedEnumTest.java",
      "violations": [
        {
          "beginline": 81,
          "begincolumn": 24,
          "endline": 81,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 87,
          "begincolumn": 17,
          "endline": 87,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 87,
          "begincolumn": 17,
          "endline": 87,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 93,
          "begincolumn": 17,
          "endline": 93,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 93,
          "begincolumn": 17,
          "endline": 93,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 99,
          "begincolumn": 17,
          "endline": 99,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 99,
          "begincolumn": 17,
          "endline": 99,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 105,
          "begincolumn": 17,
          "endline": 105,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 105,
          "begincolumn": 17,
          "endline": 105,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 110,
          "begincolumn": 17,
          "endline": 110,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 114,
          "begincolumn": 17,
          "endline": 114,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 114,
          "begincolumn": 17,
          "endline": 114,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 121,
          "begincolumn": 17,
          "endline": 121,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 121,
          "begincolumn": 17,
          "endline": 121,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 135,
          "begincolumn": 17,
          "endline": 135,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 135,
          "begincolumn": 17,
          "endline": 135,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 151,
          "begincolumn": 17,
          "endline": 151,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 151,
          "begincolumn": 17,
          "endline": 151,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 158,
          "begincolumn": 17,
          "endline": 158,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 158,
          "begincolumn": 17,
          "endline": 158,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 165,
          "begincolumn": 17,
          "endline": 165,
          "endcolumn": 34,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 165,
          "begincolumn": 17,
          "endline": 165,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\exception\\AbstractNestableTestCase.java",
      "violations": [
        {
          "beginline": 88,
          "begincolumn": 17,
          "endline": 88,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 100,
          "begincolumn": 13,
          "endline": 100,
          "endcolumn": 64,
          "description": "Position literals first in String comparisons",
          "rule": "LiteralsFirstInComparisons",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#literalsfirstincomparisons"
        },
        {
          "beginline": 118,
          "begincolumn": 17,
          "endline": 118,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 148,
          "begincolumn": 17,
          "endline": 148,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 155,
          "begincolumn": 66,
          "endline": 155,
          "endcolumn": 96,
          "description": "Position literals first in String comparisons",
          "rule": "LiteralsFirstInComparisons",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#literalsfirstincomparisons"
        },
        {
          "beginline": 167,
          "begincolumn": 13,
          "endline": 167,
          "endcolumn": 58,
          "description": "Position literals first in String comparisons",
          "rule": "LiteralsFirstInComparisons",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#literalsfirstincomparisons"
        },
        {
          "beginline": 173,
          "begincolumn": 13,
          "endline": 173,
          "endcolumn": 43,
          "description": "Position literals first in String comparisons",
          "rule": "LiteralsFirstInComparisons",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#literalsfirstincomparisons"
        },
        {
          "beginline": 177,
          "begincolumn": 13,
          "endline": 177,
          "endcolumn": 53,
          "description": "Position literals first in String comparisons",
          "rule": "LiteralsFirstInComparisons",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#literalsfirstincomparisons"
        },
        {
          "beginline": 181,
          "begincolumn": 13,
          "endline": 181,
          "endcolumn": 65,
          "description": "Position literals first in String comparisons",
          "rule": "LiteralsFirstInComparisons",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#literalsfirstincomparisons"
        },
        {
          "beginline": 188,
          "begincolumn": 17,
          "endline": 188,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 205,
          "begincolumn": 20,
          "endline": 205,
          "endcolumn": 23,
          "description": "Avoid unused local variables such as \u0027msg\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 213,
          "begincolumn": 20,
          "endline": 213,
          "endcolumn": 23,
          "description": "Avoid unused local variables such as \u0027msg\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 224,
          "begincolumn": 17,
          "endline": 224,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 244,
          "begincolumn": 17,
          "endline": 244,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 246,
          "begincolumn": 22,
          "endline": 246,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 256)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 247,
          "begincolumn": 25,
          "endline": 247,
          "endcolumn": 29,
          "description": "The initializer for variable \u0027msgs\u0027 is never used (overwritten on line 250)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 248,
          "begincolumn": 30,
          "endline": 248,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027throwables\u0027 is never used (overwritten on line 253)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 275,
          "begincolumn": 80,
          "endline": 275,
          "endcolumn": 93,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 277,
          "begincolumn": 23,
          "endline": 277,
          "endcolumn": 27,
          "description": "The initializer for variable \u0027t\u0027 is never used (overwritten on lines 282, 298 and 306)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 278,
          "begincolumn": 22,
          "endline": 278,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027msg\u0027 is never used (overwritten on lines 286 and 290)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 298,
          "begincolumn": 17,
          "endline": 298,
          "endcolumn": 35,
          "description": "The value assigned to variable \u0027t\u0027 is never used (overwritten on line 306)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 306,
          "begincolumn": 17,
          "endline": 306,
          "endcolumn": 36,
          "description": "The value assigned to variable \u0027t\u0027 is never used",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 317,
          "begincolumn": 17,
          "endline": 317,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 319,
          "begincolumn": 22,
          "endline": 319,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 329)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 320,
          "begincolumn": 25,
          "endline": 320,
          "endcolumn": 29,
          "description": "The initializer for variable \u0027msgs\u0027 is never used (overwritten on line 323)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 321,
          "begincolumn": 30,
          "endline": 321,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027throwables\u0027 is never used (overwritten on line 326)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 348,
          "begincolumn": 80,
          "endline": 348,
          "endcolumn": 93,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 350,
          "begincolumn": 22,
          "endline": 350,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027msg\u0027 is never used (overwritten on lines 360 and 364)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 373,
          "begincolumn": 17,
          "endline": 373,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 375,
          "begincolumn": 22,
          "endline": 375,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 392)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 376,
          "begincolumn": 25,
          "endline": 376,
          "endcolumn": 29,
          "description": "The initializer for variable \u0027msgs\u0027 is never used (overwritten on line 379)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 377,
          "begincolumn": 30,
          "endline": 377,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027throwables\u0027 is never used (overwritten on line 385)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 402,
          "begincolumn": 23,
          "endline": 402,
          "endcolumn": 27,
          "description": "The initializer for variable \u0027t\u0027 is never used (overwritten on line 408)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 411,
          "begincolumn": 30,
          "endline": 411,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027msg\u0027 is never used (overwritten on lines 414 and 418)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 428,
          "begincolumn": 17,
          "endline": 428,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 430,
          "begincolumn": 22,
          "endline": 430,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 447)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 431,
          "begincolumn": 25,
          "endline": 431,
          "endcolumn": 29,
          "description": "The initializer for variable \u0027msgs\u0027 is never used (overwritten on line 434)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 432,
          "begincolumn": 30,
          "endline": 432,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027throwables\u0027 is never used (overwritten on line 440)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 462,
          "begincolumn": 17,
          "endline": 462,
          "endcolumn": 22,
          "description": "Avoid unused local variables such as \u0027index\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 470,
          "begincolumn": 17,
          "endline": 470,
          "endcolumn": 22,
          "description": "Avoid unused local variables such as \u0027index\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 481,
          "begincolumn": 23,
          "endline": 481,
          "endcolumn": 27,
          "description": "The initializer for variable \u0027t\u0027 is never used (overwritten on line 487)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 490,
          "begincolumn": 30,
          "endline": 490,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027msg\u0027 is never used (overwritten on lines 493 and 497)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 508,
          "begincolumn": 17,
          "endline": 508,
          "endcolumn": 43,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 526,
          "begincolumn": 17,
          "endline": 526,
          "endcolumn": 36,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 531,
          "begincolumn": 21,
          "endline": 531,
          "endcolumn": 24,
          "description": "Avoid unused local variables such as \u0027pw1\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\exception\\ExceptionTestSuite.java",
      "violations": [
        {
          "beginline": 85,
          "begincolumn": 24,
          "endline": 85,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\exception\\ExceptionUtilsTestCase.java",
      "violations": [
        {
          "beginline": 79,
          "begincolumn": 24,
          "endline": 79,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 91,
          "begincolumn": 17,
          "endline": 91,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 91,
          "begincolumn": 17,
          "endline": 91,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 98,
          "begincolumn": 17,
          "endline": 98,
          "endcolumn": 33,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 98,
          "begincolumn": 17,
          "endline": 98,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 105,
          "begincolumn": 17,
          "endline": 105,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 124,
          "begincolumn": 26,
          "endline": 124,
          "endcolumn": 34,
          "description": "The method \u0027getCause()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\exception\\NestableDelegateTestCase.java",
      "violations": [
        {
          "beginline": 112,
          "begincolumn": 17,
          "endline": 112,
          "endcolumn": 48,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 112,
          "begincolumn": 17,
          "endline": 112,
          "endcolumn": 48,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 118,
          "begincolumn": 30,
          "endline": 118,
          "endcolumn": 47,
          "description": "Avoid unused local variables such as \u0027nonThrowableCause\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 127,
          "begincolumn": 13,
          "endline": 127,
          "endcolumn": 47,
          "description": "Position literals first in String comparisons",
          "rule": "LiteralsFirstInComparisons",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#literalsfirstincomparisons"
        },
        {
          "beginline": 132,
          "begincolumn": 30,
          "endline": 132,
          "endcolumn": 33,
          "description": "Avoid unused local variables such as \u0027nd1\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 141,
          "begincolumn": 17,
          "endline": 141,
          "endcolumn": 47,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 141,
          "begincolumn": 17,
          "endline": 141,
          "endcolumn": 47,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 145,
          "begincolumn": 13,
          "endline": 145,
          "endcolumn": 67,
          "description": "Position literals first in String comparisons",
          "rule": "LiteralsFirstInComparisons",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#literalsfirstincomparisons"
        },
        {
          "beginline": 156,
          "begincolumn": 17,
          "endline": 156,
          "endcolumn": 54,
          "description": "This unit test should include assert() or fail()",
          "rule": "UnitTestShouldIncludeAssert",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldincludeassert"
        },
        {
          "beginline": 156,
          "begincolumn": 17,
          "endline": 156,
          "endcolumn": 54,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 158,
          "begincolumn": 22,
          "endline": 158,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 161)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 159,
          "begincolumn": 30,
          "endline": 159,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027d\u0027 is never used (overwritten on line 162)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 188,
          "begincolumn": 17,
          "endline": 188,
          "endcolumn": 48,
          "description": "This unit test should include assert() or fail()",
          "rule": "UnitTestShouldIncludeAssert",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldincludeassert"
        },
        {
          "beginline": 188,
          "begincolumn": 17,
          "endline": 188,
          "endcolumn": 48,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 190,
          "begincolumn": 22,
          "endline": 190,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 195)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 191,
          "begincolumn": 30,
          "endline": 191,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027d\u0027 is never used (overwritten on line 196)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 192,
          "begincolumn": 25,
          "endline": 192,
          "endcolumn": 29,
          "description": "The initializer for variable \u0027msgs\u0027 is never used (overwritten on line 194)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 228,
          "begincolumn": 68,
          "endline": 228,
          "endcolumn": 82,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 239,
          "begincolumn": 17,
          "endline": 239,
          "endcolumn": 48,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 239,
          "begincolumn": 17,
          "endline": 239,
          "endcolumn": 48,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 241,
          "begincolumn": 22,
          "endline": 241,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 249)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 242,
          "begincolumn": 30,
          "endline": 242,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027d\u0027 is never used (overwritten on line 250)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 257,
          "begincolumn": 9,
          "endline": 264,
          "endcolumn": 10,
          "description": "In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions",
          "rule": "JUnitUseExpected",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junituseexpected"
        },
        {
          "beginline": 259,
          "begincolumn": 20,
          "endline": 259,
          "endcolumn": 23,
          "description": "Avoid unused local variables such as \u0027msg\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 265,
          "begincolumn": 9,
          "endline": 272,
          "endcolumn": 10,
          "description": "In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions",
          "rule": "JUnitUseExpected",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junituseexpected"
        },
        {
          "beginline": 267,
          "begincolumn": 20,
          "endline": 267,
          "endcolumn": 23,
          "description": "Avoid unused local variables such as \u0027msg\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 275,
          "begincolumn": 17,
          "endline": 275,
          "endcolumn": 50,
          "description": "This unit test should include assert() or fail()",
          "rule": "UnitTestShouldIncludeAssert",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldincludeassert"
        },
        {
          "beginline": 275,
          "begincolumn": 17,
          "endline": 275,
          "endcolumn": 50,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 277,
          "begincolumn": 22,
          "endline": 277,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 288)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 278,
          "begincolumn": 30,
          "endline": 278,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027d\u0027 is never used (overwritten on line 289)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 279,
          "begincolumn": 25,
          "endline": 279,
          "endcolumn": 29,
          "description": "The initializer for variable \u0027msgs\u0027 is never used (overwritten on line 282)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 280,
          "begincolumn": 30,
          "endline": 280,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027throwables\u0027 is never used (overwritten on line 285)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 309,
          "begincolumn": 87,
          "endline": 309,
          "endcolumn": 100,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 311,
          "begincolumn": 23,
          "endline": 311,
          "endcolumn": 27,
          "description": "The initializer for variable \u0027t\u0027 is never used (overwritten on lines 316, 332 and 340)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 312,
          "begincolumn": 22,
          "endline": 312,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027msg\u0027 is never used (overwritten on lines 320 and 324)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 332,
          "begincolumn": 17,
          "endline": 332,
          "endcolumn": 35,
          "description": "The value assigned to variable \u0027t\u0027 is never used (overwritten on line 340)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 340,
          "begincolumn": 17,
          "endline": 340,
          "endcolumn": 36,
          "description": "The value assigned to variable \u0027t\u0027 is never used",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 348,
          "begincolumn": 17,
          "endline": 348,
          "endcolumn": 50,
          "description": "This unit test should include assert() or fail()",
          "rule": "UnitTestShouldIncludeAssert",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldincludeassert"
        },
        {
          "beginline": 348,
          "begincolumn": 17,
          "endline": 348,
          "endcolumn": 50,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 350,
          "begincolumn": 22,
          "endline": 350,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 361)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 351,
          "begincolumn": 30,
          "endline": 351,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027d\u0027 is never used (overwritten on line 362)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 352,
          "begincolumn": 25,
          "endline": 352,
          "endcolumn": 29,
          "description": "The initializer for variable \u0027msgs\u0027 is never used (overwritten on line 355)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 353,
          "begincolumn": 30,
          "endline": 353,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027throwables\u0027 is never used (overwritten on line 358)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 382,
          "begincolumn": 87,
          "endline": 382,
          "endcolumn": 100,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 384,
          "begincolumn": 34,
          "endline": 384,
          "endcolumn": 38,
          "description": "The initializer for variable \u0027throwables\u0027 is never used (overwritten on line 387)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 385,
          "begincolumn": 22,
          "endline": 385,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027msg\u0027 is never used (overwritten on lines 395 and 399)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 405,
          "begincolumn": 17,
          "endline": 405,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 405,
          "begincolumn": 17,
          "endline": 405,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 407,
          "begincolumn": 22,
          "endline": 407,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 425)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 408,
          "begincolumn": 30,
          "endline": 408,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027d\u0027 is never used (overwritten on line 426)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 409,
          "begincolumn": 25,
          "endline": 409,
          "endcolumn": 29,
          "description": "The initializer for variable \u0027msgs\u0027 is never used (overwritten on line 412)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 410,
          "begincolumn": 30,
          "endline": 410,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027throwables\u0027 is never used (overwritten on line 418)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 439,
          "begincolumn": 9,
          "endline": 446,
          "endcolumn": 10,
          "description": "In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions",
          "rule": "JUnitUseExpected",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junituseexpected"
        },
        {
          "beginline": 441,
          "begincolumn": 17,
          "endline": 441,
          "endcolumn": 22,
          "description": "Avoid unused local variables such as \u0027index\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 447,
          "begincolumn": 9,
          "endline": 454,
          "endcolumn": 10,
          "description": "In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions",
          "rule": "JUnitUseExpected",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junituseexpected"
        },
        {
          "beginline": 449,
          "begincolumn": 17,
          "endline": 449,
          "endcolumn": 22,
          "description": "Avoid unused local variables such as \u0027index\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 459,
          "begincolumn": 23,
          "endline": 459,
          "endcolumn": 27,
          "description": "The initializer for variable \u0027t\u0027 is never used (overwritten on line 465)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 468,
          "begincolumn": 30,
          "endline": 468,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027msg\u0027 is never used (overwritten on lines 471 and 475)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 482,
          "begincolumn": 17,
          "endline": 482,
          "endcolumn": 52,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 482,
          "begincolumn": 17,
          "endline": 482,
          "endcolumn": 52,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 512,
          "begincolumn": 13,
          "endline": 512,
          "endcolumn": 71,
          "description": "Position literals first in String comparisons",
          "rule": "LiteralsFirstInComparisons",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#literalsfirstincomparisons"
        },
        {
          "beginline": 595,
          "begincolumn": 22,
          "endline": 595,
          "endcolumn": 30,
          "description": "The method \u0027getCause()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 712,
          "begincolumn": 22,
          "endline": 712,
          "endcolumn": 30,
          "description": "The method \u0027getCause()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 771,
          "begincolumn": 19,
          "endline": 771,
          "endcolumn": 29,
          "description": "The method \u0027getMessage()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 800,
          "begincolumn": 22,
          "endline": 800,
          "endcolumn": 30,
          "description": "The method \u0027getCause()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 810,
          "begincolumn": 17,
          "endline": 810,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace(PrintWriter)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 865,
          "begincolumn": 31,
          "endline": 865,
          "endcolumn": 35,
          "description": "The field initializer for \u0027cause\u0027 is never used (overwritten on line 869)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 886,
          "begincolumn": 19,
          "endline": 886,
          "endcolumn": 29,
          "description": "The method \u0027getMessage()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 917,
          "begincolumn": 22,
          "endline": 917,
          "endcolumn": 30,
          "description": "The method \u0027getCause()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 927,
          "begincolumn": 17,
          "endline": 927,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace(PrintWriter)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\exception\\NestableErrorTestCase.java",
      "violations": [
        {
          "beginline": 93,
          "begincolumn": 24,
          "endline": 93,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\exception\\NestableExceptionTestCase.java",
      "violations": [
        {
          "beginline": 249,
          "begincolumn": 17,
          "endline": 249,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 260,
          "begincolumn": 31,
          "endline": 260,
          "endcolumn": 35,
          "description": "The initializer for variable \u0027bais\u0027 is never used (overwritten on line 269)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 262,
          "begincolumn": 27,
          "endline": 262,
          "endcolumn": 31,
          "description": "The initializer for variable \u0027ois\u0027 is never used (overwritten on line 270)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 264,
          "begincolumn": 3,
          "endline": 303,
          "endcolumn": 4,
          "description": "Consider using a try-with-resources statement instead of explicitly closing the resource",
          "rule": "UseTryWithResources",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usetrywithresources"
        }
      ]
    }
  ],
  "suppressedViolations": [],
  "processingErrors": [
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\enum\\ValuedEnum.java",
      "message": "ParseException: Parse exception in file \u0027commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\enum\\ValuedEnum.java\u0027 at line 166, column 24: Since Java 1.5, \u0027enum\u0027 is reserved and cannot be used as an identifier",
      "detail": "net.sourceforge.pmd.lang.ast.ParseException: Parse exception in file \u0027commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\enum\\ValuedEnum.java\u0027 at line 166, column 24: Since Java 1.5, \u0027enum\u0027 is reserved and cannot be used as an identifier\r\n\tat net.sourceforge.pmd.lang.java.ast.internal.ReportingStrategy$1.report(ReportingStrategy.java:55)\r\n\tat net.sourceforge.pmd.lang.java.ast.internal.ReportingStrategy$1.report(ReportingStrategy.java:42)\r\n\tat net.sourceforge.pmd.lang.java.ast.internal.LanguageLevelChecker.check(LanguageLevelChecker.java:104)\r\n\tat net.sourceforge.pmd.lang.java.ast.internal.LanguageLevelChecker.access$300(LanguageLevelChecker.java:71)\r\n\tat net.sourceforge.pmd.lang.java.ast.internal.LanguageLevelChecker$CheckVisitor.checkIdent(LanguageLevelChecker.java:739)\r\n\tat net.sourceforge.pmd.lang.java.ast.internal.LanguageLevelChecker$CheckVisitor.visit(LanguageLevelChecker.java:675)\r\n\tat net.sourceforge.pmd.lang.java.ast.internal.LanguageLevelChecker$CheckVisitor.visit(LanguageLevelChecker.java:426)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTVariableId.acceptVisitor(ASTVariableId.java:59)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.acceptVisitor(AbstractJavaNode.java:38)\r\n\tat net.sourceforge.pmd.lang.java.ast.internal.LanguageLevelChecker.lambda$check$0(LanguageLevelChecker.java:97)\r\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\r\n\tat net.sourceforge.pmd.lang.ast.internal.IteratorBasedNStream.forEach(IteratorBasedNStream.java:102)\r\n\tat net.sourceforge.pmd.lang.java.ast.internal.LanguageLevelChecker.check(LanguageLevelChecker.java:97)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.parseImpl(JavaParser.java:66)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.parseImpl(JavaParser.java:25)\r\n\tat net.sourceforge.pmd.lang.ast.impl.javacc.JjtreeParserAdapter.parse(JjtreeParserAdapter.java:36)\r\n\tat net.sourceforge.pmd.lang.impl.PmdRunnable.parse(PmdRunnable.java:112)\r\n\tat net.sourceforge.pmd.lang.impl.PmdRunnable.processSource(PmdRunnable.java:132)\r\n\tat net.sourceforge.pmd.lang.impl.PmdRunnable.run(PmdRunnable.java:80)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:842)\r\n"
    }
  ],
  "configurationErrors": []
}