{
  "formatVersion": 0,
  "pmdVersion": "7.12.0",
  "timestamp": "2025-04-22T04:15:24.145+09:00",
  "files": [
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\CharRange.java",
      "violations": [
        {
          "beginline": 192,
          "begincolumn": 19,
          "endline": 192,
          "endcolumn": 27,
          "description": "The method \u0027toString()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\CharSet.java",
      "violations": [
        {
          "beginline": 70,
          "begincolumn": 13,
          "endline": 70,
          "endcolumn": 23,
          "description": "Avoid using implementation types like \u0027LinkedList\u0027; use the interface instead",
          "rule": "LooseCoupling",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#loosecoupling"
        },
        {
          "beginline": 75,
          "begincolumn": 23,
          "endline": 75,
          "endcolumn": 35,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 148,
          "begincolumn": 19,
          "endline": 148,
          "endcolumn": 27,
          "description": "The method \u0027toString()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\CharSetUtils.java",
      "violations": [
        {
          "beginline": 79,
          "begincolumn": 39,
          "endline": 79,
          "endcolumn": 51,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 107,
          "begincolumn": 46,
          "endline": 107,
          "endcolumn": 58,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 113,
          "begincolumn": 19,
          "endline": 113,
          "endcolumn": 22,
          "description": "The initializer for variable \u0027ch\u0027 is never used (overwritten on line 115)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 149,
          "begincolumn": 41,
          "endline": 149,
          "endcolumn": 53,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 184,
          "begincolumn": 45,
          "endline": 184,
          "endcolumn": 57,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\HashCodeBuilder.java",
      "violations": [
        {
          "beginline": 104,
          "begincolumn": 26,
          "endline": 104,
          "endcolumn": 27,
          "description": "The field initializer for \u0027iTotal\u0027 is never used (overwritten on lines 114 and 142)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 253,
          "begincolumn": 35,
          "endline": 253,
          "endcolumn": 49,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 257,
          "begincolumn": 13,
          "endline": 259,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 270,
          "begincolumn": 35,
          "endline": 270,
          "endcolumn": 47,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 274,
          "begincolumn": 13,
          "endline": 276,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 287,
          "begincolumn": 35,
          "endline": 287,
          "endcolumn": 46,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 291,
          "begincolumn": 13,
          "endline": 293,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 304,
          "begincolumn": 35,
          "endline": 304,
          "endcolumn": 48,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 308,
          "begincolumn": 13,
          "endline": 310,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 321,
          "begincolumn": 35,
          "endline": 321,
          "endcolumn": 47,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 325,
          "begincolumn": 13,
          "endline": 327,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 342,
          "begincolumn": 13,
          "endline": 344,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 355,
          "begincolumn": 35,
          "endline": 355,
          "endcolumn": 49,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 359,
          "begincolumn": 13,
          "endline": 361,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 372,
          "begincolumn": 35,
          "endline": 372,
          "endcolumn": 48,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 376,
          "begincolumn": 13,
          "endline": 378,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 389,
          "begincolumn": 35,
          "endline": 389,
          "endcolumn": 50,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 393,
          "begincolumn": 13,
          "endline": 395,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\NumberRange.java",
      "violations": [
        {
          "beginline": 186,
          "begincolumn": 20,
          "endline": 186,
          "endcolumn": 26,
          "description": "The method \u0027equals(Object)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 202,
          "begincolumn": 16,
          "endline": 202,
          "endcolumn": 24,
          "description": "The method \u0027hashCode()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 217,
          "begincolumn": 19,
          "endline": 217,
          "endcolumn": 27,
          "description": "The method \u0027toString()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\NumberUtils.java",
      "violations": [
        {
          "beginline": 390,
          "begincolumn": 13,
          "endline": 390,
          "endcolumn": 14,
          "description": "Avoid reassigning parameters such as \u0027a\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 403,
          "begincolumn": 13,
          "endline": 403,
          "endcolumn": 14,
          "description": "Avoid reassigning parameters such as \u0027a\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\RandomStringUtils.java",
      "violations": [
        {
          "beginline": 188,
          "begincolumn": 98,
          "endline": 188,
          "endcolumn": 108,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 190,
          "begincolumn": 13,
          "endline": 190,
          "endcolumn": 16,
          "description": "Avoid reassigning parameters such as \u0027end\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 191,
          "begincolumn": 13,
          "endline": 191,
          "endcolumn": 18,
          "description": "Avoid reassigning parameters such as \u0027start\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 201,
          "begincolumn": 15,
          "endline": 201,
          "endcolumn": 20,
          "description": "Avoid reassigning parameters such as \u0027count\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 244,
          "begincolumn": 44,
          "endline": 244,
          "endcolumn": 54,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\SerializationUtils.java",
      "violations": [
        {
          "beginline": 119,
          "begincolumn": 9,
          "endline": 134,
          "endcolumn": 10,
          "description": "Consider using a try-with-resources statement instead of explicitly closing the resource",
          "rule": "UseTryWithResources",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usetrywithresources"
        },
        {
          "beginline": 162,
          "begincolumn": 9,
          "endline": 179,
          "endcolumn": 10,
          "description": "Consider using a try-with-resources statement instead of explicitly closing the resource",
          "rule": "UseTryWithResources",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usetrywithresources"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\StringUtils.java",
      "violations": [
        {
          "beginline": 196,
          "begincolumn": 46,
          "endline": 196,
          "endcolumn": 65,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 205,
          "begincolumn": 19,
          "endline": 205,
          "endcolumn": 20,
          "description": "The initializer for variable \u0027tmp\u0027 is never used (overwritten on line 207)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 228,
          "begincolumn": 50,
          "endline": 228,
          "endcolumn": 69,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 234,
          "begincolumn": 19,
          "endline": 234,
          "endcolumn": 20,
          "description": "The initializer for variable \u0027tmp\u0027 is never used (overwritten on line 236)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 264,
          "begincolumn": 13,
          "endline": 264,
          "endcolumn": 18,
          "description": "Avoid reassigning parameters such as \u0027start\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 296,
          "begincolumn": 13,
          "endline": 296,
          "endcolumn": 16,
          "description": "Avoid reassigning parameters such as \u0027end\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 299,
          "begincolumn": 13,
          "endline": 299,
          "endcolumn": 18,
          "description": "Avoid reassigning parameters such as \u0027start\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 434,
          "begincolumn": 31,
          "endline": 434,
          "endcolumn": 35,
          "description": "The initializer for variable \u0027tok\u0027 is never used (overwritten on lines 438 and 440)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 481,
          "begincolumn": 38,
          "endline": 481,
          "endcolumn": 52,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 497,
          "begincolumn": 13,
          "endline": 497,
          "endcolumn": 22,
          "description": "Avoid reassigning parameters such as \u0027separator\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 525,
          "begincolumn": 13,
          "endline": 525,
          "endcolumn": 22,
          "description": "Avoid reassigning parameters such as \u0027separator\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 588,
          "begincolumn": 13,
          "endline": 588,
          "endcolumn": 18,
          "description": "Use one line for each declaration, it enhances code readability.",
          "rule": "OneDeclarationPerLine",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#onedeclarationperline"
        },
        {
          "beginline": 588,
          "begincolumn": 30,
          "endline": 588,
          "endcolumn": 31,
          "description": "The initializer for variable \u0027end\u0027 is never used (overwritten on line 589)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 593,
          "begincolumn": 19,
          "endline": 593,
          "endcolumn": 22,
          "description": "Avoid reassigning parameters such as \u0027max\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 648,
          "begincolumn": 9,
          "endline": 648,
          "endcolumn": 12,
          "description": "Avoid reassigning parameters such as \u0027str\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 933,
          "begincolumn": 9,
          "endline": 933,
          "endcolumn": 13,
          "description": "Avoid reassigning parameters such as \u0027size\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 935,
          "begincolumn": 13,
          "endline": 935,
          "endcolumn": 16,
          "description": "Avoid reassigning parameters such as \u0027str\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 959,
          "begincolumn": 9,
          "endline": 959,
          "endcolumn": 13,
          "description": "Avoid reassigning parameters such as \u0027size\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 961,
          "begincolumn": 13,
          "endline": 961,
          "endcolumn": 16,
          "description": "Avoid reassigning parameters such as \u0027str\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 988,
          "begincolumn": 9,
          "endline": 988,
          "endcolumn": 12,
          "description": "Avoid reassigning parameters such as \u0027str\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 999,
          "begincolumn": 37,
          "endline": 999,
          "endcolumn": 50,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 1071,
          "begincolumn": 18,
          "endline": 1071,
          "endcolumn": 21,
          "description": "Avoid unused local variables such as \u0027chr\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 1164,
          "begincolumn": 19,
          "endline": 1164,
          "endcolumn": 20,
          "description": "The initializer for variable \u0027ch\u0027 is never used (overwritten on line 1168)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 1165,
          "begincolumn": 20,
          "endline": 1165,
          "endcolumn": 21,
          "description": "The initializer for variable \u0027tmp\u0027 is never used (overwritten on lines 1170, 1172, 1175, 1177 and 1180)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 1466,
          "begincolumn": 38,
          "endline": 1466,
          "endcolumn": 52,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\enum\\Enum.java",
      "violations": [
        {
          "beginline": 273,
          "begincolumn": 26,
          "endline": 273,
          "endcolumn": 32,
          "description": "The method \u0027equals(Object)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 312,
          "begincolumn": 22,
          "endline": 312,
          "endcolumn": 30,
          "description": "The method \u0027hashCode()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 326,
          "begincolumn": 16,
          "endline": 326,
          "endcolumn": 25,
          "description": "The method \u0027compareTo(Object)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 337,
          "begincolumn": 19,
          "endline": 337,
          "endcolumn": 27,
          "description": "The method \u0027toString()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\exception\\ExceptionUtils.java",
      "violations": [
        {
          "beginline": 131,
          "begincolumn": 51,
          "endline": 131,
          "endcolumn": 71,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 136,
          "begincolumn": 13,
          "endline": 143,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 166,
          "begincolumn": 13,
          "endline": 166,
          "endcolumn": 14,
          "description": "Avoid reassigning parameters such as \u0027t\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 297,
          "begincolumn": 13,
          "endline": 297,
          "endcolumn": 14,
          "description": "Avoid reassigning parameters such as \u0027t\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        },
        {
          "beginline": 315,
          "begincolumn": 13,
          "endline": 315,
          "endcolumn": 14,
          "description": "Avoid reassigning parameters such as \u0027t\u0027",
          "rule": "AvoidReassigningParameters",
          "ruleset": "Best Practices",
          "priority": 2,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#avoidreassigningparameters"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\exception\\NestableDelegate.java",
      "violations": [
        {
          "beginline": 84,
          "begincolumn": 34,
          "endline": 84,
          "endcolumn": 38,
          "description": "The field initializer for \u0027nestable\u0027 is never used (overwritten on line 97)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 303,
          "begincolumn": 21,
          "endline": 306,
          "endcolumn": 22,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        },
        {
          "beginline": 312,
          "begincolumn": 13,
          "endline": 315,
          "endcolumn": 14,
          "description": "This for loop can be replaced by a foreach loop",
          "rule": "ForLoopCanBeForeach",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#forloopcanbeforeach"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\exception\\NestableError.java",
      "violations": [
        {
          "beginline": 129,
          "begincolumn": 22,
          "endline": 129,
          "endcolumn": 30,
          "description": "The method \u0027getCause()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 134,
          "begincolumn": 19,
          "endline": 134,
          "endcolumn": 29,
          "description": "The method \u0027getMessage()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 181,
          "begincolumn": 17,
          "endline": 181,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 186,
          "begincolumn": 17,
          "endline": 186,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace(PrintStream)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 191,
          "begincolumn": 17,
          "endline": 191,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace(PrintWriter)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\exception\\NestableException.java",
      "violations": [
        {
          "beginline": 191,
          "begincolumn": 22,
          "endline": 191,
          "endcolumn": 30,
          "description": "The method \u0027getCause()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 196,
          "begincolumn": 19,
          "endline": 196,
          "endcolumn": 29,
          "description": "The method \u0027getMessage()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 243,
          "begincolumn": 17,
          "endline": 243,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 248,
          "begincolumn": 17,
          "endline": 248,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace(PrintStream)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 253,
          "begincolumn": 17,
          "endline": 253,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace(PrintWriter)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\exception\\NestableRuntimeException.java",
      "violations": [
        {
          "beginline": 138,
          "begincolumn": 22,
          "endline": 138,
          "endcolumn": 30,
          "description": "The method \u0027getCause()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 143,
          "begincolumn": 19,
          "endline": 143,
          "endcolumn": 29,
          "description": "The method \u0027getMessage()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 190,
          "begincolumn": 17,
          "endline": 190,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 195,
          "begincolumn": 17,
          "endline": 195,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace(PrintStream)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 200,
          "begincolumn": 17,
          "endline": 200,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace(PrintWriter)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\CharSetUtilsTest.java",
      "violations": [
        {
          "beginline": 80,
          "begincolumn": 24,
          "endline": 80,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 96,
          "begincolumn": 17,
          "endline": 96,
          "endcolumn": 28,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 96,
          "begincolumn": 17,
          "endline": 96,
          "endcolumn": 28,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 110,
          "begincolumn": 17,
          "endline": 110,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 110,
          "begincolumn": 17,
          "endline": 110,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 126,
          "begincolumn": 17,
          "endline": 126,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 126,
          "begincolumn": 17,
          "endline": 126,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\HashCodeBuilderTest.java",
      "violations": [
        {
          "beginline": 77,
          "begincolumn": 24,
          "endline": 77,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 93,
          "begincolumn": 17,
          "endline": 93,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 103,
          "begincolumn": 17,
          "endline": 103,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 113,
          "begincolumn": 17,
          "endline": 113,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 113,
          "begincolumn": 17,
          "endline": 113,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 120,
          "begincolumn": 17,
          "endline": 120,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 120,
          "begincolumn": 17,
          "endline": 120,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 125,
          "begincolumn": 17,
          "endline": 125,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 125,
          "begincolumn": 17,
          "endline": 125,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 130,
          "begincolumn": 17,
          "endline": 130,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 130,
          "begincolumn": 17,
          "endline": 130,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 135,
          "begincolumn": 17,
          "endline": 135,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 135,
          "begincolumn": 17,
          "endline": 135,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 140,
          "begincolumn": 17,
          "endline": 140,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 140,
          "begincolumn": 17,
          "endline": 140,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 145,
          "begincolumn": 17,
          "endline": 145,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 145,
          "begincolumn": 17,
          "endline": 145,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 152,
          "begincolumn": 17,
          "endline": 152,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 152,
          "begincolumn": 17,
          "endline": 152,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 159,
          "begincolumn": 17,
          "endline": 159,
          "endcolumn": 28,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 159,
          "begincolumn": 17,
          "endline": 159,
          "endcolumn": 28,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 164,
          "begincolumn": 17,
          "endline": 164,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 164,
          "begincolumn": 17,
          "endline": 164,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 174,
          "begincolumn": 17,
          "endline": 174,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 174,
          "begincolumn": 17,
          "endline": 174,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 186,
          "begincolumn": 17,
          "endline": 186,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 186,
          "begincolumn": 17,
          "endline": 186,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 196,
          "begincolumn": 17,
          "endline": 196,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 196,
          "begincolumn": 17,
          "endline": 196,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 206,
          "begincolumn": 17,
          "endline": 206,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 206,
          "begincolumn": 17,
          "endline": 206,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 216,
          "begincolumn": 17,
          "endline": 216,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 216,
          "begincolumn": 17,
          "endline": 216,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 226,
          "begincolumn": 17,
          "endline": 226,
          "endcolumn": 32,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 226,
          "begincolumn": 17,
          "endline": 226,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 240,
          "begincolumn": 17,
          "endline": 240,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 240,
          "begincolumn": 17,
          "endline": 240,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 252,
          "begincolumn": 17,
          "endline": 252,
          "endcolumn": 33,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 252,
          "begincolumn": 17,
          "endline": 252,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\LangTestSuite.java",
      "violations": [
        {
          "beginline": 86,
          "begincolumn": 24,
          "endline": 86,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\NumberRangeTest.java",
      "violations": [
        {
          "beginline": 87,
          "begincolumn": 22,
          "endline": 87,
          "endcolumn": 36,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 88,
          "begincolumn": 22,
          "endline": 88,
          "endcolumn": 37,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 89,
          "begincolumn": 22,
          "endline": 89,
          "endcolumn": 37,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 90,
          "begincolumn": 22,
          "endline": 90,
          "endcolumn": 37,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 91,
          "begincolumn": 22,
          "endline": 91,
          "endcolumn": 37,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 97,
          "begincolumn": 24,
          "endline": 97,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 104,
          "begincolumn": 17,
          "endline": 104,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 104,
          "begincolumn": 17,
          "endline": 104,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 123,
          "begincolumn": 17,
          "endline": 123,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 123,
          "begincolumn": 17,
          "endline": 123,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 146,
          "begincolumn": 17,
          "endline": 146,
          "endcolumn": 34,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 146,
          "begincolumn": 17,
          "endline": 146,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 179,
          "begincolumn": 17,
          "endline": 179,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\NumberUtilsTest.java",
      "violations": [
        {
          "beginline": 77,
          "begincolumn": 24,
          "endline": 77,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 88,
          "begincolumn": 17,
          "endline": 88,
          "endcolumn": 38,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 88,
          "begincolumn": 17,
          "endline": 88,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 96,
          "begincolumn": 17,
          "endline": 96,
          "endcolumn": 39,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 96,
          "begincolumn": 17,
          "endline": 96,
          "endcolumn": 39,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 101,
          "begincolumn": 17,
          "endline": 101,
          "endcolumn": 33,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 101,
          "begincolumn": 17,
          "endline": 101,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 103,
          "begincolumn": 55,
          "endline": 103,
          "endcolumn": 74,
          "description": "Do not use `new Float(...)`, prefer `Float.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 104,
          "begincolumn": 55,
          "endline": 104,
          "endcolumn": 75,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 105,
          "begincolumn": 55,
          "endline": 105,
          "endcolumn": 75,
          "description": "Do not use `new Double(...)`, prefer `Double.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 106,
          "begincolumn": 55,
          "endline": 106,
          "endcolumn": 74,
          "description": "Do not use `new Float(...)`, prefer `Float.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 107,
          "begincolumn": 55,
          "endline": 107,
          "endcolumn": 87,
          "description": "Do not use `new Long(...)`, prefer `Long.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 108,
          "begincolumn": 55,
          "endline": 108,
          "endcolumn": 70,
          "description": "Do not use `new Long(...)`, prefer `Long.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 109,
          "begincolumn": 55,
          "endline": 109,
          "endcolumn": 75,
          "description": "Do not use `new Float(...)`, prefer `Float.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 110,
          "begincolumn": 55,
          "endline": 110,
          "endcolumn": 76,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 113,
          "begincolumn": 56,
          "endline": 113,
          "endcolumn": 77,
          "description": "Do not use `new Double(...)`, prefer `Double.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 114,
          "begincolumn": 56,
          "endline": 114,
          "endcolumn": 75,
          "description": "Do not use `new Float(...)`, prefer `Float.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 115,
          "begincolumn": 56,
          "endline": 115,
          "endcolumn": 78,
          "description": "Do not use `new Double(...)`, prefer `Double.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 116,
          "begincolumn": 56,
          "endline": 116,
          "endcolumn": 78,
          "description": "Do not use `new Double(...)`, prefer `Double.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 120,
          "begincolumn": 13,
          "endline": 120,
          "endcolumn": 47,
          "description": "Do not use `new Long(...)`, prefer `Long.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 124,
          "begincolumn": 13,
          "endline": 124,
          "endcolumn": 47,
          "description": "Do not use `new Long(...)`, prefer `Long.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 133,
          "begincolumn": 17,
          "endline": 133,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 134,
          "begincolumn": 52,
          "endline": 134,
          "endcolumn": 71,
          "description": "Do not use `new Float(...)`, prefer `Float.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 137,
          "begincolumn": 17,
          "endline": 137,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 138,
          "begincolumn": 53,
          "endline": 138,
          "endcolumn": 73,
          "description": "Do not use `new Double(...)`, prefer `Double.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 141,
          "begincolumn": 17,
          "endline": 141,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 142,
          "begincolumn": 54,
          "endline": 142,
          "endcolumn": 74,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 145,
          "begincolumn": 17,
          "endline": 145,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 146,
          "begincolumn": 54,
          "endline": 146,
          "endcolumn": 71,
          "description": "Do not use `new Long(...)`, prefer `Long.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 149,
          "begincolumn": 17,
          "endline": 149,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 153,
          "begincolumn": 17,
          "endline": 153,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 157,
          "begincolumn": 17,
          "endline": 157,
          "endcolumn": 28,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 157,
          "begincolumn": 17,
          "endline": 157,
          "endcolumn": 28,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 166,
          "begincolumn": 17,
          "endline": 166,
          "endcolumn": 28,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 166,
          "begincolumn": 17,
          "endline": 166,
          "endcolumn": 28,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 175,
          "begincolumn": 17,
          "endline": 175,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 175,
          "begincolumn": 17,
          "endline": 175,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 188,
          "begincolumn": 17,
          "endline": 188,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 188,
          "begincolumn": 17,
          "endline": 188,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\ObjectUtilsTest.java",
      "violations": [
        {
          "beginline": 84,
          "begincolumn": 24,
          "endline": 84,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 103,
          "begincolumn": 17,
          "endline": 103,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 103,
          "begincolumn": 17,
          "endline": 103,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 113,
          "begincolumn": 17,
          "endline": 113,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 113,
          "begincolumn": 17,
          "endline": 113,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\RandomStringUtilsTest.java",
      "violations": [
        {
          "beginline": 95,
          "begincolumn": 17,
          "endline": 95,
          "endcolumn": 38,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 95,
          "begincolumn": 17,
          "endline": 95,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\SerializationUtilsTest.java",
      "violations": [
        {
          "beginline": 78,
          "begincolumn": 13,
          "endline": 78,
          "endcolumn": 20,
          "description": "Avoid using implementation types like \u0027HashMap\u0027; use the interface instead",
          "rule": "LooseCoupling",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#loosecoupling"
        },
        {
          "beginline": 88,
          "begincolumn": 24,
          "endline": 88,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 98,
          "begincolumn": 20,
          "endline": 98,
          "endcolumn": 34,
          "description": "Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`",
          "rule": "PrimitiveWrapperInstantiation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#primitivewrapperinstantiation"
        },
        {
          "beginline": 110,
          "begincolumn": 17,
          "endline": 110,
          "endcolumn": 36,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 110,
          "begincolumn": 17,
          "endline": 110,
          "endcolumn": 36,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 128,
          "begincolumn": 17,
          "endline": 128,
          "endcolumn": 50,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 139,
          "begincolumn": 17,
          "endline": 139,
          "endcolumn": 43,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 139,
          "begincolumn": 17,
          "endline": 139,
          "endcolumn": 43,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 157,
          "begincolumn": 17,
          "endline": 157,
          "endcolumn": 43,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 158,
          "begincolumn": 31,
          "endline": 158,
          "endcolumn": 41,
          "description": "Avoid unused local variables such as \u0027streamTest\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 167,
          "begincolumn": 17,
          "endline": 167,
          "endcolumn": 44,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 168,
          "begincolumn": 31,
          "endline": 168,
          "endcolumn": 41,
          "description": "Avoid unused local variables such as \u0027streamTest\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 179,
          "begincolumn": 17,
          "endline": 179,
          "endcolumn": 38,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 179,
          "begincolumn": 17,
          "endline": 179,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 191,
          "begincolumn": 9,
          "endline": 191,
          "endcolumn": 16,
          "description": "Avoid using implementation types like \u0027HashMap\u0027; use the interface instead",
          "rule": "LooseCoupling",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#loosecoupling"
        },
        {
          "beginline": 199,
          "begincolumn": 17,
          "endline": 199,
          "endcolumn": 44,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 211,
          "begincolumn": 17,
          "endline": 211,
          "endcolumn": 42,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 220,
          "begincolumn": 17,
          "endline": 220,
          "endcolumn": 47,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 231,
          "begincolumn": 17,
          "endline": 231,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 231,
          "begincolumn": 17,
          "endline": 231,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 247,
          "begincolumn": 17,
          "endline": 247,
          "endcolumn": 49,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 257,
          "begincolumn": 17,
          "endline": 257,
          "endcolumn": 39,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 257,
          "begincolumn": 17,
          "endline": 257,
          "endcolumn": 39,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 275,
          "begincolumn": 17,
          "endline": 275,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 275,
          "begincolumn": 17,
          "endline": 275,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 286,
          "begincolumn": 9,
          "endline": 286,
          "endcolumn": 16,
          "description": "Avoid using implementation types like \u0027HashMap\u0027; use the interface instead",
          "rule": "LooseCoupling",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#loosecoupling"
        },
        {
          "beginline": 294,
          "begincolumn": 17,
          "endline": 294,
          "endcolumn": 43,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 305,
          "begincolumn": 17,
          "endline": 305,
          "endcolumn": 41,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 314,
          "begincolumn": 17,
          "endline": 314,
          "endcolumn": 46,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 325,
          "begincolumn": 17,
          "endline": 325,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 325,
          "begincolumn": 17,
          "endline": 325,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 330,
          "begincolumn": 9,
          "endline": 330,
          "endcolumn": 16,
          "description": "Avoid using implementation types like \u0027HashMap\u0027; use the interface instead",
          "rule": "LooseCoupling",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#loosecoupling"
        },
        {
          "beginline": 338,
          "begincolumn": 17,
          "endline": 338,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 343,
          "begincolumn": 17,
          "endline": 343,
          "endcolumn": 40,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\StringUtilsEqualsIndexOfTest.java",
      "violations": [
        {
          "beginline": 82,
          "begincolumn": 24,
          "endline": 82,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 98,
          "begincolumn": 17,
          "endline": 98,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 98,
          "begincolumn": 17,
          "endline": 98,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 108,
          "begincolumn": 17,
          "endline": 108,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 108,
          "begincolumn": 17,
          "endline": 108,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 118,
          "begincolumn": 17,
          "endline": 118,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 118,
          "begincolumn": 17,
          "endline": 118,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 127,
          "begincolumn": 17,
          "endline": 127,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 127,
          "begincolumn": 17,
          "endline": 127,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\StringUtilsIsTest.java",
      "violations": [
        {
          "beginline": 77,
          "begincolumn": 24,
          "endline": 77,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 93,
          "begincolumn": 17,
          "endline": 93,
          "endcolumn": 28,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 93,
          "begincolumn": 17,
          "endline": 93,
          "endcolumn": 28,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 107,
          "begincolumn": 17,
          "endline": 107,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 107,
          "begincolumn": 17,
          "endline": 107,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 121,
          "begincolumn": 17,
          "endline": 121,
          "endcolumn": 33,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 121,
          "begincolumn": 17,
          "endline": 121,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 135,
          "begincolumn": 17,
          "endline": 135,
          "endcolumn": 40,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 135,
          "begincolumn": 17,
          "endline": 135,
          "endcolumn": 40,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 149,
          "begincolumn": 17,
          "endline": 149,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 149,
          "begincolumn": 17,
          "endline": 149,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 166,
          "begincolumn": 17,
          "endline": 166,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 166,
          "begincolumn": 17,
          "endline": 166,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\StringUtilsSubstringTest.java",
      "violations": [
        {
          "beginline": 83,
          "begincolumn": 24,
          "endline": 83,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 100,
          "begincolumn": 17,
          "endline": 100,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 100,
          "begincolumn": 17,
          "endline": 100,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 107,
          "begincolumn": 17,
          "endline": 107,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 107,
          "begincolumn": 17,
          "endline": 107,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 116,
          "begincolumn": 17,
          "endline": 116,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 116,
          "begincolumn": 17,
          "endline": 116,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 126,
          "begincolumn": 17,
          "endline": 126,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 135,
          "begincolumn": 17,
          "endline": 135,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 135,
          "begincolumn": 17,
          "endline": 135,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 145,
          "begincolumn": 17,
          "endline": 145,
          "endcolumn": 28,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 154,
          "begincolumn": 17,
          "endline": 154,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 154,
          "begincolumn": 17,
          "endline": 154,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 167,
          "begincolumn": 17,
          "endline": 167,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 176,
          "begincolumn": 17,
          "endline": 176,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 185,
          "begincolumn": 17,
          "endline": 185,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 194,
          "begincolumn": 17,
          "endline": 194,
          "endcolumn": 33,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 194,
          "begincolumn": 17,
          "endline": 194,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 203,
          "begincolumn": 17,
          "endline": 203,
          "endcolumn": 36,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 203,
          "begincolumn": 17,
          "endline": 203,
          "endcolumn": 36,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\StringUtilsTest.java",
      "violations": [
        {
          "beginline": 83,
          "begincolumn": 33,
          "endline": 83,
          "endcolumn": 42,
          "description": "Avoid unused private fields such as \u0027UPPER_FOO\u0027.",
          "rule": "UnusedPrivateField",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedprivatefield"
        },
        {
          "beginline": 95,
          "begincolumn": 24,
          "endline": 95,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 111,
          "begincolumn": 17,
          "endline": 111,
          "endcolumn": 34,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 111,
          "begincolumn": 17,
          "endline": 111,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 143,
          "begincolumn": 17,
          "endline": 143,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 143,
          "begincolumn": 17,
          "endline": 143,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 154,
          "begincolumn": 17,
          "endline": 154,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 154,
          "begincolumn": 17,
          "endline": 154,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 187,
          "begincolumn": 17,
          "endline": 187,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 187,
          "begincolumn": 17,
          "endline": 187,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 197,
          "begincolumn": 17,
          "endline": 197,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 203,
          "begincolumn": 17,
          "endline": 203,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 209,
          "begincolumn": 17,
          "endline": 209,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 215,
          "begincolumn": 17,
          "endline": 215,
          "endcolumn": 35,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 215,
          "begincolumn": 17,
          "endline": 215,
          "endcolumn": 35,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 240,
          "begincolumn": 17,
          "endline": 240,
          "endcolumn": 33,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 240,
          "begincolumn": 17,
          "endline": 240,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 261,
          "begincolumn": 17,
          "endline": 261,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 261,
          "begincolumn": 17,
          "endline": 261,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 277,
          "begincolumn": 17,
          "endline": 277,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 277,
          "begincolumn": 17,
          "endline": 277,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 292,
          "begincolumn": 17,
          "endline": 292,
          "endcolumn": 36,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 292,
          "begincolumn": 17,
          "endline": 292,
          "endcolumn": 36,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 311,
          "begincolumn": 17,
          "endline": 311,
          "endcolumn": 43,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 311,
          "begincolumn": 17,
          "endline": 311,
          "endcolumn": 43,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\StringUtilsTrimEmptyTest.java",
      "violations": [
        {
          "beginline": 79,
          "begincolumn": 24,
          "endline": 79,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 95,
          "begincolumn": 17,
          "endline": 95,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 95,
          "begincolumn": 17,
          "endline": 95,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 103,
          "begincolumn": 17,
          "endline": 103,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 103,
          "begincolumn": 17,
          "endline": 103,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 111,
          "begincolumn": 17,
          "endline": 111,
          "endcolumn": 31,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 111,
          "begincolumn": 17,
          "endline": 111,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 118,
          "begincolumn": 17,
          "endline": 118,
          "endcolumn": 28,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 118,
          "begincolumn": 17,
          "endline": 118,
          "endcolumn": 28,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 125,
          "begincolumn": 17,
          "endline": 125,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 125,
          "begincolumn": 17,
          "endline": 125,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 134,
          "begincolumn": 17,
          "endline": 134,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 134,
          "begincolumn": 17,
          "endline": 134,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 186,
          "begincolumn": 49,
          "endline": 186,
          "endcolumn": 60,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\enum\\EnumTest.java",
      "violations": [
        {
          "beginline": 81,
          "begincolumn": 24,
          "endline": 81,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 87,
          "begincolumn": 17,
          "endline": 87,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 87,
          "begincolumn": 17,
          "endline": 87,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 93,
          "begincolumn": 17,
          "endline": 93,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 93,
          "begincolumn": 17,
          "endline": 93,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 99,
          "begincolumn": 17,
          "endline": 99,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 99,
          "begincolumn": 17,
          "endline": 99,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 104,
          "begincolumn": 17,
          "endline": 104,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 108,
          "begincolumn": 17,
          "endline": 108,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 108,
          "begincolumn": 17,
          "endline": 108,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 115,
          "begincolumn": 17,
          "endline": 115,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 115,
          "begincolumn": 17,
          "endline": 115,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 123,
          "begincolumn": 17,
          "endline": 123,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 123,
          "begincolumn": 17,
          "endline": 123,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 133,
          "begincolumn": 17,
          "endline": 133,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 133,
          "begincolumn": 17,
          "endline": 133,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 140,
          "begincolumn": 17,
          "endline": 140,
          "endcolumn": 34,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 140,
          "begincolumn": 17,
          "endline": 140,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\enum\\EnumTestSuite.java",
      "violations": [
        {
          "beginline": 85,
          "begincolumn": 24,
          "endline": 85,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\enum\\EnumUtilsTest.java",
      "violations": [
        {
          "beginline": 81,
          "begincolumn": 24,
          "endline": 81,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 87,
          "begincolumn": 17,
          "endline": 87,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 87,
          "begincolumn": 17,
          "endline": 87,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 94,
          "begincolumn": 17,
          "endline": 94,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 103,
          "begincolumn": 17,
          "endline": 103,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 103,
          "begincolumn": 17,
          "endline": 103,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 111,
          "begincolumn": 17,
          "endline": 111,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 120,
          "begincolumn": 17,
          "endline": 120,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 120,
          "begincolumn": 17,
          "endline": 120,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 130,
          "begincolumn": 17,
          "endline": 130,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 139,
          "begincolumn": 17,
          "endline": 139,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 139,
          "begincolumn": 17,
          "endline": 139,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 146,
          "begincolumn": 17,
          "endline": 146,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 155,
          "begincolumn": 17,
          "endline": 155,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 155,
          "begincolumn": 17,
          "endline": 155,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 162,
          "begincolumn": 17,
          "endline": 162,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\enum\\ValuedEnumTest.java",
      "violations": [
        {
          "beginline": 81,
          "begincolumn": 24,
          "endline": 81,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 87,
          "begincolumn": 17,
          "endline": 87,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 87,
          "begincolumn": 17,
          "endline": 87,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 93,
          "begincolumn": 17,
          "endline": 93,
          "endcolumn": 26,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 93,
          "begincolumn": 17,
          "endline": 93,
          "endcolumn": 26,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 99,
          "begincolumn": 17,
          "endline": 99,
          "endcolumn": 30,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 99,
          "begincolumn": 17,
          "endline": 99,
          "endcolumn": 30,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 105,
          "begincolumn": 17,
          "endline": 105,
          "endcolumn": 27,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 105,
          "begincolumn": 17,
          "endline": 105,
          "endcolumn": 27,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 110,
          "begincolumn": 17,
          "endline": 110,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 114,
          "begincolumn": 17,
          "endline": 114,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 114,
          "begincolumn": 17,
          "endline": 114,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 121,
          "begincolumn": 17,
          "endline": 121,
          "endcolumn": 25,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 121,
          "begincolumn": 17,
          "endline": 121,
          "endcolumn": 25,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 129,
          "begincolumn": 17,
          "endline": 129,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 129,
          "begincolumn": 17,
          "endline": 129,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 139,
          "begincolumn": 17,
          "endline": 139,
          "endcolumn": 24,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 139,
          "begincolumn": 17,
          "endline": 139,
          "endcolumn": 24,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 146,
          "begincolumn": 17,
          "endline": 146,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 146,
          "begincolumn": 17,
          "endline": 146,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 153,
          "begincolumn": 17,
          "endline": 153,
          "endcolumn": 34,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 153,
          "begincolumn": 17,
          "endline": 153,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\exception\\AbstractNestableTestCase.java",
      "violations": [
        {
          "beginline": 88,
          "begincolumn": 17,
          "endline": 88,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 100,
          "begincolumn": 13,
          "endline": 100,
          "endcolumn": 64,
          "description": "Position literals first in String comparisons",
          "rule": "LiteralsFirstInComparisons",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#literalsfirstincomparisons"
        },
        {
          "beginline": 118,
          "begincolumn": 17,
          "endline": 118,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 148,
          "begincolumn": 17,
          "endline": 148,
          "endcolumn": 31,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 155,
          "begincolumn": 66,
          "endline": 155,
          "endcolumn": 96,
          "description": "Position literals first in String comparisons",
          "rule": "LiteralsFirstInComparisons",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#literalsfirstincomparisons"
        },
        {
          "beginline": 167,
          "begincolumn": 13,
          "endline": 167,
          "endcolumn": 58,
          "description": "Position literals first in String comparisons",
          "rule": "LiteralsFirstInComparisons",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#literalsfirstincomparisons"
        },
        {
          "beginline": 173,
          "begincolumn": 13,
          "endline": 173,
          "endcolumn": 43,
          "description": "Position literals first in String comparisons",
          "rule": "LiteralsFirstInComparisons",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#literalsfirstincomparisons"
        },
        {
          "beginline": 177,
          "begincolumn": 13,
          "endline": 177,
          "endcolumn": 53,
          "description": "Position literals first in String comparisons",
          "rule": "LiteralsFirstInComparisons",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#literalsfirstincomparisons"
        },
        {
          "beginline": 181,
          "begincolumn": 13,
          "endline": 181,
          "endcolumn": 65,
          "description": "Position literals first in String comparisons",
          "rule": "LiteralsFirstInComparisons",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#literalsfirstincomparisons"
        },
        {
          "beginline": 188,
          "begincolumn": 17,
          "endline": 188,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 205,
          "begincolumn": 20,
          "endline": 205,
          "endcolumn": 23,
          "description": "Avoid unused local variables such as \u0027msg\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 213,
          "begincolumn": 20,
          "endline": 213,
          "endcolumn": 23,
          "description": "Avoid unused local variables such as \u0027msg\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 224,
          "begincolumn": 17,
          "endline": 224,
          "endcolumn": 32,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 244,
          "begincolumn": 17,
          "endline": 244,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 246,
          "begincolumn": 22,
          "endline": 246,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 256)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 247,
          "begincolumn": 25,
          "endline": 247,
          "endcolumn": 29,
          "description": "The initializer for variable \u0027msgs\u0027 is never used (overwritten on line 250)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 248,
          "begincolumn": 30,
          "endline": 248,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027throwables\u0027 is never used (overwritten on line 253)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 275,
          "begincolumn": 80,
          "endline": 275,
          "endcolumn": 93,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 277,
          "begincolumn": 23,
          "endline": 277,
          "endcolumn": 27,
          "description": "The initializer for variable \u0027t\u0027 is never used (overwritten on lines 282, 298 and 306)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 278,
          "begincolumn": 22,
          "endline": 278,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027msg\u0027 is never used (overwritten on lines 286 and 290)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 298,
          "begincolumn": 17,
          "endline": 298,
          "endcolumn": 35,
          "description": "The value assigned to variable \u0027t\u0027 is never used (overwritten on line 306)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 306,
          "begincolumn": 17,
          "endline": 306,
          "endcolumn": 36,
          "description": "The value assigned to variable \u0027t\u0027 is never used",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 317,
          "begincolumn": 17,
          "endline": 317,
          "endcolumn": 34,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 319,
          "begincolumn": 22,
          "endline": 319,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 330)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 320,
          "begincolumn": 25,
          "endline": 320,
          "endcolumn": 29,
          "description": "The initializer for variable \u0027msgs\u0027 is never used (overwritten on line 323)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 321,
          "begincolumn": 30,
          "endline": 321,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027throwables\u0027 is never used (overwritten on line 326)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 349,
          "begincolumn": 80,
          "endline": 349,
          "endcolumn": 93,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 351,
          "begincolumn": 22,
          "endline": 351,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027msg\u0027 is never used (overwritten on lines 361 and 365)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 374,
          "begincolumn": 17,
          "endline": 374,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 376,
          "begincolumn": 22,
          "endline": 376,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 393)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 377,
          "begincolumn": 25,
          "endline": 377,
          "endcolumn": 29,
          "description": "The initializer for variable \u0027msgs\u0027 is never used (overwritten on line 380)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 378,
          "begincolumn": 30,
          "endline": 378,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027throwables\u0027 is never used (overwritten on line 386)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 403,
          "begincolumn": 23,
          "endline": 403,
          "endcolumn": 27,
          "description": "The initializer for variable \u0027t\u0027 is never used (overwritten on line 409)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 412,
          "begincolumn": 30,
          "endline": 412,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027msg\u0027 is never used (overwritten on lines 415 and 419)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 429,
          "begincolumn": 17,
          "endline": 429,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 431,
          "begincolumn": 22,
          "endline": 431,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 448)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 432,
          "begincolumn": 25,
          "endline": 432,
          "endcolumn": 29,
          "description": "The initializer for variable \u0027msgs\u0027 is never used (overwritten on line 435)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 433,
          "begincolumn": 30,
          "endline": 433,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027throwables\u0027 is never used (overwritten on line 441)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 463,
          "begincolumn": 17,
          "endline": 463,
          "endcolumn": 22,
          "description": "Avoid unused local variables such as \u0027index\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 471,
          "begincolumn": 17,
          "endline": 471,
          "endcolumn": 22,
          "description": "Avoid unused local variables such as \u0027index\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 482,
          "begincolumn": 23,
          "endline": 482,
          "endcolumn": 27,
          "description": "The initializer for variable \u0027t\u0027 is never used (overwritten on line 488)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 491,
          "begincolumn": 30,
          "endline": 491,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027msg\u0027 is never used (overwritten on lines 494 and 498)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 509,
          "begincolumn": 17,
          "endline": 509,
          "endcolumn": 43,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 526,
          "begincolumn": 17,
          "endline": 526,
          "endcolumn": 36,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 531,
          "begincolumn": 21,
          "endline": 531,
          "endcolumn": 24,
          "description": "Avoid unused local variables such as \u0027pw1\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\exception\\ExceptionTestSuite.java",
      "violations": [
        {
          "beginline": 85,
          "begincolumn": 24,
          "endline": 85,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\exception\\ExceptionUtilsTestCase.java",
      "violations": [
        {
          "beginline": 78,
          "begincolumn": 24,
          "endline": 78,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        },
        {
          "beginline": 90,
          "begincolumn": 17,
          "endline": 90,
          "endcolumn": 29,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 90,
          "begincolumn": 17,
          "endline": 90,
          "endcolumn": 29,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 97,
          "begincolumn": 17,
          "endline": 97,
          "endcolumn": 33,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 97,
          "begincolumn": 17,
          "endline": 97,
          "endcolumn": 33,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 104,
          "begincolumn": 17,
          "endline": 104,
          "endcolumn": 38,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 118,
          "begincolumn": 26,
          "endline": 118,
          "endcolumn": 34,
          "description": "The method \u0027getCause()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 129,
          "begincolumn": 21,
          "endline": 129,
          "endcolumn": 29,
          "description": "The method \u0027getCause()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\exception\\NestableDelegateTestCase.java",
      "violations": [
        {
          "beginline": 112,
          "begincolumn": 17,
          "endline": 112,
          "endcolumn": 48,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 112,
          "begincolumn": 17,
          "endline": 112,
          "endcolumn": 48,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 118,
          "begincolumn": 30,
          "endline": 118,
          "endcolumn": 47,
          "description": "Avoid unused local variables such as \u0027nonThrowableCause\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 127,
          "begincolumn": 13,
          "endline": 127,
          "endcolumn": 47,
          "description": "Position literals first in String comparisons",
          "rule": "LiteralsFirstInComparisons",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#literalsfirstincomparisons"
        },
        {
          "beginline": 132,
          "begincolumn": 30,
          "endline": 132,
          "endcolumn": 33,
          "description": "Avoid unused local variables such as \u0027nd1\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 141,
          "begincolumn": 17,
          "endline": 141,
          "endcolumn": 47,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 141,
          "begincolumn": 17,
          "endline": 141,
          "endcolumn": 47,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 145,
          "begincolumn": 13,
          "endline": 145,
          "endcolumn": 67,
          "description": "Position literals first in String comparisons",
          "rule": "LiteralsFirstInComparisons",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#literalsfirstincomparisons"
        },
        {
          "beginline": 156,
          "begincolumn": 17,
          "endline": 156,
          "endcolumn": 54,
          "description": "This unit test should include assert() or fail()",
          "rule": "UnitTestShouldIncludeAssert",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldincludeassert"
        },
        {
          "beginline": 156,
          "begincolumn": 17,
          "endline": 156,
          "endcolumn": 54,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 158,
          "begincolumn": 22,
          "endline": 158,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 161)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 159,
          "begincolumn": 30,
          "endline": 159,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027d\u0027 is never used (overwritten on line 162)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 188,
          "begincolumn": 17,
          "endline": 188,
          "endcolumn": 48,
          "description": "This unit test should include assert() or fail()",
          "rule": "UnitTestShouldIncludeAssert",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldincludeassert"
        },
        {
          "beginline": 188,
          "begincolumn": 17,
          "endline": 188,
          "endcolumn": 48,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 190,
          "begincolumn": 22,
          "endline": 190,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 195)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 191,
          "begincolumn": 30,
          "endline": 191,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027d\u0027 is never used (overwritten on line 196)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 192,
          "begincolumn": 25,
          "endline": 192,
          "endcolumn": 29,
          "description": "The initializer for variable \u0027msgs\u0027 is never used (overwritten on line 194)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 228,
          "begincolumn": 68,
          "endline": 228,
          "endcolumn": 82,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 239,
          "begincolumn": 17,
          "endline": 239,
          "endcolumn": 48,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 239,
          "begincolumn": 17,
          "endline": 239,
          "endcolumn": 48,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 241,
          "begincolumn": 22,
          "endline": 241,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 249)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 242,
          "begincolumn": 30,
          "endline": 242,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027d\u0027 is never used (overwritten on line 250)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 257,
          "begincolumn": 9,
          "endline": 264,
          "endcolumn": 10,
          "description": "In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions",
          "rule": "JUnitUseExpected",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junituseexpected"
        },
        {
          "beginline": 259,
          "begincolumn": 20,
          "endline": 259,
          "endcolumn": 23,
          "description": "Avoid unused local variables such as \u0027msg\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 265,
          "begincolumn": 9,
          "endline": 272,
          "endcolumn": 10,
          "description": "In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions",
          "rule": "JUnitUseExpected",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junituseexpected"
        },
        {
          "beginline": 267,
          "begincolumn": 20,
          "endline": 267,
          "endcolumn": 23,
          "description": "Avoid unused local variables such as \u0027msg\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 275,
          "begincolumn": 17,
          "endline": 275,
          "endcolumn": 50,
          "description": "This unit test should include assert() or fail()",
          "rule": "UnitTestShouldIncludeAssert",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldincludeassert"
        },
        {
          "beginline": 275,
          "begincolumn": 17,
          "endline": 275,
          "endcolumn": 50,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 277,
          "begincolumn": 22,
          "endline": 277,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 288)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 278,
          "begincolumn": 30,
          "endline": 278,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027d\u0027 is never used (overwritten on line 289)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 279,
          "begincolumn": 25,
          "endline": 279,
          "endcolumn": 29,
          "description": "The initializer for variable \u0027msgs\u0027 is never used (overwritten on line 282)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 280,
          "begincolumn": 30,
          "endline": 280,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027throwables\u0027 is never used (overwritten on line 285)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 309,
          "begincolumn": 87,
          "endline": 309,
          "endcolumn": 100,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 311,
          "begincolumn": 23,
          "endline": 311,
          "endcolumn": 27,
          "description": "The initializer for variable \u0027t\u0027 is never used (overwritten on lines 316, 332 and 340)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 312,
          "begincolumn": 22,
          "endline": 312,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027msg\u0027 is never used (overwritten on lines 320 and 324)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 332,
          "begincolumn": 17,
          "endline": 332,
          "endcolumn": 35,
          "description": "The value assigned to variable \u0027t\u0027 is never used (overwritten on line 340)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 340,
          "begincolumn": 17,
          "endline": 340,
          "endcolumn": 36,
          "description": "The value assigned to variable \u0027t\u0027 is never used",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 348,
          "begincolumn": 17,
          "endline": 348,
          "endcolumn": 50,
          "description": "This unit test should include assert() or fail()",
          "rule": "UnitTestShouldIncludeAssert",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldincludeassert"
        },
        {
          "beginline": 348,
          "begincolumn": 17,
          "endline": 348,
          "endcolumn": 50,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 350,
          "begincolumn": 22,
          "endline": 350,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 361)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 351,
          "begincolumn": 30,
          "endline": 351,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027d\u0027 is never used (overwritten on line 362)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 352,
          "begincolumn": 25,
          "endline": 352,
          "endcolumn": 29,
          "description": "The initializer for variable \u0027msgs\u0027 is never used (overwritten on line 355)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 353,
          "begincolumn": 30,
          "endline": 353,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027throwables\u0027 is never used (overwritten on line 358)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 382,
          "begincolumn": 87,
          "endline": 382,
          "endcolumn": 100,
          "description": "Consider using varargs for methods or constructors which take an array the last parameter.",
          "rule": "UseVarargs",
          "ruleset": "Best Practices",
          "priority": 4,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usevarargs"
        },
        {
          "beginline": 384,
          "begincolumn": 34,
          "endline": 384,
          "endcolumn": 38,
          "description": "The initializer for variable \u0027throwables\u0027 is never used (overwritten on line 387)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 385,
          "begincolumn": 22,
          "endline": 385,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027msg\u0027 is never used (overwritten on lines 395 and 399)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 405,
          "begincolumn": 17,
          "endline": 405,
          "endcolumn": 37,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 405,
          "begincolumn": 17,
          "endline": 405,
          "endcolumn": 37,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 407,
          "begincolumn": 22,
          "endline": 407,
          "endcolumn": 26,
          "description": "The initializer for variable \u0027n\u0027 is never used (overwritten on line 425)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 408,
          "begincolumn": 30,
          "endline": 408,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027d\u0027 is never used (overwritten on line 426)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 409,
          "begincolumn": 25,
          "endline": 409,
          "endcolumn": 29,
          "description": "The initializer for variable \u0027msgs\u0027 is never used (overwritten on line 412)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 410,
          "begincolumn": 30,
          "endline": 410,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027throwables\u0027 is never used (overwritten on line 418)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 439,
          "begincolumn": 9,
          "endline": 446,
          "endcolumn": 10,
          "description": "In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions",
          "rule": "JUnitUseExpected",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junituseexpected"
        },
        {
          "beginline": 441,
          "begincolumn": 17,
          "endline": 441,
          "endcolumn": 22,
          "description": "Avoid unused local variables such as \u0027index\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 447,
          "begincolumn": 9,
          "endline": 454,
          "endcolumn": 10,
          "description": "In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions",
          "rule": "JUnitUseExpected",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junituseexpected"
        },
        {
          "beginline": 449,
          "begincolumn": 17,
          "endline": 449,
          "endcolumn": 22,
          "description": "Avoid unused local variables such as \u0027index\u0027.",
          "rule": "UnusedLocalVariable",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedlocalvariable"
        },
        {
          "beginline": 459,
          "begincolumn": 23,
          "endline": 459,
          "endcolumn": 27,
          "description": "The initializer for variable \u0027t\u0027 is never used (overwritten on line 465)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 468,
          "begincolumn": 30,
          "endline": 468,
          "endcolumn": 34,
          "description": "The initializer for variable \u0027msg\u0027 is never used (overwritten on lines 471 and 475)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 482,
          "begincolumn": 17,
          "endline": 482,
          "endcolumn": 52,
          "description": "Unit tests should not contain more than 1 assert(s).",
          "rule": "UnitTestContainsTooManyAsserts",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestcontainstoomanyasserts"
        },
        {
          "beginline": 482,
          "begincolumn": 17,
          "endline": 482,
          "endcolumn": 52,
          "description": "Unit tests should use the @Test annotation or wont be run. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
          "rule": "UnitTestShouldUseTestAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unittestshouldusetestannotation"
        },
        {
          "beginline": 512,
          "begincolumn": 13,
          "endline": 512,
          "endcolumn": 71,
          "description": "Position literals first in String comparisons",
          "rule": "LiteralsFirstInComparisons",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#literalsfirstincomparisons"
        },
        {
          "beginline": 619,
          "begincolumn": 22,
          "endline": 619,
          "endcolumn": 30,
          "description": "The method \u0027getCause()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 813,
          "begincolumn": 22,
          "endline": 813,
          "endcolumn": 30,
          "description": "The method \u0027getCause()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 928,
          "begincolumn": 19,
          "endline": 928,
          "endcolumn": 29,
          "description": "The method \u0027getMessage()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 967,
          "begincolumn": 22,
          "endline": 967,
          "endcolumn": 30,
          "description": "The method \u0027getCause()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 979,
          "begincolumn": 17,
          "endline": 979,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace(PrintWriter)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 1067,
          "begincolumn": 31,
          "endline": 1067,
          "endcolumn": 35,
          "description": "The field initializer for \u0027cause\u0027 is never used (overwritten on line 1071)",
          "rule": "UnusedAssignment",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#unusedassignment"
        },
        {
          "beginline": 1085,
          "begincolumn": 19,
          "endline": 1085,
          "endcolumn": 29,
          "description": "The method \u0027getMessage()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 1112,
          "begincolumn": 22,
          "endline": 1112,
          "endcolumn": 30,
          "description": "The method \u0027getCause()\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        },
        {
          "beginline": 1124,
          "begincolumn": 17,
          "endline": 1124,
          "endcolumn": 32,
          "description": "The method \u0027printStackTrace(PrintWriter)\u0027 is missing an @Override annotation.",
          "rule": "MissingOverride",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#missingoverride"
        }
      ]
    },
    {
      "filename": "commons-lang-analysis\\repo\\src\\test\\org\\apache\\commons\\lang\\exception\\NestableErrorTestCase.java",
      "violations": [
        {
          "beginline": 93,
          "begincolumn": 24,
          "endline": 93,
          "endcolumn": 29,
          "description": "JUnit 4 indicates test suites via annotations, not the suite method.",
          "rule": "JUnit4SuitesShouldUseSuiteAnnotation",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#junit4suitesshouldusesuiteannotation"
        }
      ]
    }
  ],
  "suppressedViolations": [],
  "processingErrors": [
    {
      "filename": "commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\enum\\ValuedEnum.java",
      "message": "ParseException: Parse exception in file \u0027commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\enum\\ValuedEnum.java\u0027 at line 166, column 24: Since Java 1.5, \u0027enum\u0027 is reserved and cannot be used as an identifier",
      "detail": "net.sourceforge.pmd.lang.ast.ParseException: Parse exception in file \u0027commons-lang-analysis\\repo\\src\\java\\org\\apache\\commons\\lang\\enum\\ValuedEnum.java\u0027 at line 166, column 24: Since Java 1.5, \u0027enum\u0027 is reserved and cannot be used as an identifier\r\n\tat net.sourceforge.pmd.lang.java.ast.internal.ReportingStrategy$1.report(ReportingStrategy.java:55)\r\n\tat net.sourceforge.pmd.lang.java.ast.internal.ReportingStrategy$1.report(ReportingStrategy.java:42)\r\n\tat net.sourceforge.pmd.lang.java.ast.internal.LanguageLevelChecker.check(LanguageLevelChecker.java:104)\r\n\tat net.sourceforge.pmd.lang.java.ast.internal.LanguageLevelChecker.access$300(LanguageLevelChecker.java:71)\r\n\tat net.sourceforge.pmd.lang.java.ast.internal.LanguageLevelChecker$CheckVisitor.checkIdent(LanguageLevelChecker.java:739)\r\n\tat net.sourceforge.pmd.lang.java.ast.internal.LanguageLevelChecker$CheckVisitor.visit(LanguageLevelChecker.java:675)\r\n\tat net.sourceforge.pmd.lang.java.ast.internal.LanguageLevelChecker$CheckVisitor.visit(LanguageLevelChecker.java:426)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTVariableId.acceptVisitor(ASTVariableId.java:59)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.acceptVisitor(AbstractJavaNode.java:38)\r\n\tat net.sourceforge.pmd.lang.java.ast.internal.LanguageLevelChecker.lambda$check$0(LanguageLevelChecker.java:97)\r\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\r\n\tat net.sourceforge.pmd.lang.ast.internal.IteratorBasedNStream.forEach(IteratorBasedNStream.java:102)\r\n\tat net.sourceforge.pmd.lang.java.ast.internal.LanguageLevelChecker.check(LanguageLevelChecker.java:97)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.parseImpl(JavaParser.java:66)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.parseImpl(JavaParser.java:25)\r\n\tat net.sourceforge.pmd.lang.ast.impl.javacc.JjtreeParserAdapter.parse(JjtreeParserAdapter.java:36)\r\n\tat net.sourceforge.pmd.lang.impl.PmdRunnable.parse(PmdRunnable.java:112)\r\n\tat net.sourceforge.pmd.lang.impl.PmdRunnable.processSource(PmdRunnable.java:132)\r\n\tat net.sourceforge.pmd.lang.impl.PmdRunnable.run(PmdRunnable.java:80)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:842)\r\n"
    }
  ],
  "configurationErrors": []
}